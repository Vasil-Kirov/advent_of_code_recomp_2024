; ModuleID = 'io'
source_filename = "io.rcp"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

%slice.6 = type { i64, ptr }
%string = type { ptr, i64 }
%init.TypeInfo = type { i64, %init.TypeUnion }
%init.TypeUnion = type { %init.StructType }
%init.StructType = type { %slice, %string, i32 }
%slice = type { i64, ptr }
%slice.1 = type { i64, ptr }
%init.BasicType = type { i64, i32, i32, %string }
%init.FunctionType = type { %slice.1, %slice.1 }
%init.PointerType = type { i64, i1 }
%init.ArrayType = type { i64, i32 }
%init.SliceType = type { i64 }
%init.EnumType = type { %string, %slice.2, i64 }
%slice.2 = type { i64, ptr }
%init.GenericType = type { %string }
%init.Arg = type { i64, ptr }
%init.StructMember = type { %string, i64 }
%slice.8 = type { i64, ptr }
%mem.Allocator = type { ptr, ptr, ptr }
%slice.7 = type { i64, ptr }
%slice.3 = type { i64, ptr }

@main.input = external global ptr
@init.INVALID_TYPE = external global i64
@init.type_table = external global %slice.6
@os.STD_INPUT_HANDLE = external global i32
@os.STD_OUTPUT_HANDLE = external global i32
@os.STD_ERROR_HANDLE = external global i32
@os.INVALID_HANDLE_VALUE = external global ptr
@os.CP_UTF7 = external global i32
@os.CP_UTF8 = external global i32
@os.MEM_COMMIT = external global i32
@os.MEM_RESERVE = external global i32
@os.MEM_RELEASE = external global i32
@os.PAGE_NOACCESS = external global i32
@os.PAGE_READONLY = external global i32
@os.PAGE_READWRITE = external global i32
@os.PAGE_WRITECOPY = external global i32
@os.PAGE_EXECUTE = external global i32
@os.PAGE_EXECUTE_READ = external global i32
@os.PAGE_EXECUTE_READWRITE = external global i32
@os.PAGE_EXECUTE_WRITECOPY = external global i32
@os.PAGE_GUARD = external global i32
@os.PAGE_NOCACHE = external global i32
@os.PAGE_WRITECOMBINE = external global i32
@str.CONTINUE_BIT = external global i8
@0 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"fn(\00", align 1
@2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@3 = private unnamed_addr constant [2 x i8] c")\00", align 1
@4 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@6 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@7 = private unnamed_addr constant [4 x i8] c"[x]\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@9 = private unnamed_addr constant [3 x i8] c"<>\00", align 1
@10 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@11 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@12 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@13 = private unnamed_addr constant [8 x i8] c"mem: %\0A\00", align 1
@14 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@15 = private unnamed_addr constant [3 x i8] c", \00", align 1
@16 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

define void @io.__GlobalInitializerFunction.0() {
block_0:
  ret void
}

declare void @main.get_map(ptr, ptr, ptr, ptr)

declare i32 @main.main()

declare void @init.global_initializers()

declare i64 @init.get_struct_alignment(i64)

declare i64 @init.get_type_alignment(i64)

declare i64 @init.get_basic_type_size(ptr)

declare i64 @init.get_struct_size(i64)

declare i64 @init.get_type_size(i64)

declare i64 @init.get_struct_member_offset(ptr, i64)

declare i32 @main.main.1()

declare i32 @main()

declare void @os.assert(i1, ptr)

declare i1 @WriteFile(ptr, ptr, i32, ptr, ptr)

declare ptr @GetStdHandle(i32)

declare void @ExitProcess(i32)

declare i32 @SetConsoleOutputCP(i32)

declare ptr @VirtualAlloc(ptr, i64, i32, i32)

declare i1 @VirtualFree(ptr, i64, i32)

declare i1 @ReadConsoleA(ptr, ptr, i32, ptr, ptr)

declare void @os.abort()

declare void @os.print(ptr, i32)

declare ptr @os.alloc(i64)

declare void @os.free(ptr)

declare i32 @os.read_stdin_line(ptr, i32)

define void @io.push_string(ptr %0, ptr %1) !dbg !79 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %string, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store ptr %0, ptr %2, align 8, !dbg !97
  call void @llvm.dbg.value(metadata ptr %2, metadata !98, metadata !DIExpression()), !dbg !97
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !97
  call void @llvm.dbg.value(metadata ptr %3, metadata !99, metadata !DIExpression()), !dbg !97
  %7 = getelementptr inbounds %string, ptr %3, i32 0, i32 1, !dbg !100
  %8 = load i64, ptr %7, align 8, !dbg !100
  %9 = getelementptr inbounds %string, ptr %3, i32 0, i32 0, !dbg !100
  %10 = load ptr, ptr %9, align 8, !dbg !100
  store ptr %10, ptr %4, align 8, !dbg !100
  store i64 0, ptr %5, align 8, !dbg !100
  br label %block_1, !dbg !100

block_1:                                          ; preds = %block_3, %block_0
  %11 = load i64, ptr %5, align 8, !dbg !100
  %12 = icmp ult i64 %11, %8, !dbg !100
  br i1 %12, label %block_2, label %block_4, !dbg !100

block_2:                                          ; preds = %block_1
  %13 = load ptr, ptr %4, align 8, !dbg !100
  %14 = call i32 @str.deref(ptr %13), !dbg !100
  store i32 %14, ptr %6, align 4, !dbg !100
  call void @llvm.dbg.declare(metadata ptr %6, metadata !101, metadata !DIExpression()), !dbg !100
  call void @llvm.dbg.declare(metadata ptr %5, metadata !102, metadata !DIExpression()), !dbg !100
  %15 = load ptr, ptr %2, align 8, !dbg !103
  %16 = load i32, ptr %6, align 4, !dbg !103
  call void @"array.add:(*[]u32,u32)->void"(ptr %15, i32 %16), !dbg !103
  br label %block_3, !dbg !103

block_3:                                          ; preds = %block_2
  %17 = load i64, ptr %5, align 8, !dbg !103
  %18 = add i64 %17, 1, !dbg !103
  store i64 %18, ptr %5, align 8, !dbg !103
  %19 = load ptr, ptr %4, align 8, !dbg !103
  %20 = call ptr @str._it_advance(ptr %19, i64 %8, i64 %17), !dbg !103
  store ptr %20, ptr %4, align 8, !dbg !103
  br label %block_1, !dbg !103

block_4:                                          ; preds = %block_1
  ret void, !dbg !104
}

define void @io.format_uint(ptr %0, i64 %1) !dbg !105 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  store ptr %0, ptr %2, align 8, !dbg !109
  call void @llvm.dbg.value(metadata ptr %2, metadata !110, metadata !DIExpression()), !dbg !109
  store i64 %1, ptr %3, align 8, !dbg !109
  call void @llvm.dbg.value(metadata ptr %3, metadata !111, metadata !DIExpression()), !dbg !109
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !112
  call void @llvm.dbg.declare(metadata ptr %5, metadata !113, metadata !DIExpression()), !dbg !112
  %11 = load i64, ptr %3, align 8, !dbg !117
  store i64 %11, ptr %6, align 8, !dbg !117
  call void @llvm.dbg.declare(metadata ptr %6, metadata !118, metadata !DIExpression()), !dbg !117
  %12 = load i64, ptr %6, align 8, !dbg !119
  %13 = icmp eq i64 %12, 0, !dbg !119
  br i1 %13, label %block_1, label %block_2, !dbg !119

block_1:                                          ; preds = %block_0
  %14 = load ptr, ptr %2, align 8, !dbg !120
  call void @"array.add:(*[]u32,u32)->void"(ptr %14, i32 48), !dbg !120
  ret void, !dbg !121

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !121

block_3:                                          ; preds = %block_2
  store i64 0, ptr %7, align 8, !dbg !122
  call void @llvm.dbg.declare(metadata ptr %7, metadata !123, metadata !DIExpression()), !dbg !122
  br label %block_4, !dbg !124

block_4:                                          ; preds = %block_5, %block_3
  %15 = load i64, ptr %6, align 8, !dbg !124
  %16 = icmp ugt i64 %15, 0, !dbg !124
  br i1 %16, label %block_5, label %block_6, !dbg !124

block_5:                                          ; preds = %block_4
  %17 = load i64, ptr %6, align 8, !dbg !125
  %18 = urem i64 %17, 10, !dbg !125
  store i64 %18, ptr %8, align 8, !dbg !125
  call void @llvm.dbg.declare(metadata ptr %8, metadata !126, metadata !DIExpression()), !dbg !125
  %19 = load i64, ptr %6, align 8, !dbg !127
  %20 = udiv i64 %19, 10, !dbg !127
  store i64 %20, ptr %6, align 8, !dbg !127
  %21 = load i64, ptr %8, align 8, !dbg !128
  %22 = add i64 48, %21, !dbg !128
  store i64 %22, ptr %9, align 8, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %9, metadata !129, metadata !DIExpression()), !dbg !128
  %23 = load i64, ptr %7, align 8, !dbg !130
  %24 = getelementptr [256 x i32], ptr %5, i64 0, i64 %23, !dbg !130
  %25 = load i64, ptr %9, align 8, !dbg !130
  %26 = trunc i64 %25 to i32, !dbg !130
  store i32 %26, ptr %24, align 4, !dbg !130
  %27 = load i64, ptr %7, align 8, !dbg !131
  %28 = add i64 %27, 1, !dbg !131
  store i64 %28, ptr %7, align 8, !dbg !131
  br label %block_4, !dbg !131

block_6:                                          ; preds = %block_4
  %29 = load i64, ptr %7, align 8, !dbg !132
  store i64 0, ptr %10, align 8, !dbg !132
  br label %block_7, !dbg !132

block_7:                                          ; preds = %block_9, %block_6
  %30 = load i64, ptr %10, align 8, !dbg !132
  %31 = icmp ult i64 %30, %29, !dbg !132
  br i1 %31, label %block_8, label %block_10, !dbg !132

block_8:                                          ; preds = %block_7
  call void @llvm.dbg.declare(metadata ptr %10, metadata !133, metadata !DIExpression()), !dbg !132
  %32 = load ptr, ptr %2, align 8, !dbg !134
  %33 = load i64, ptr %7, align 8, !dbg !134
  %34 = load i64, ptr %10, align 8, !dbg !134
  %35 = sub i64 %33, %34, !dbg !134
  %36 = sub i64 %35, 1, !dbg !134
  %37 = getelementptr [256 x i32], ptr %5, i64 0, i64 %36, !dbg !134
  %38 = load i32, ptr %37, align 4, !dbg !134
  call void @"array.add:(*[]u32,u32)->void"(ptr %32, i32 %38), !dbg !134
  br label %block_9, !dbg !134

block_9:                                          ; preds = %block_8
  %39 = load i64, ptr %10, align 8, !dbg !134
  %40 = add i64 %39, 1, !dbg !134
  store i64 %40, ptr %10, align 8, !dbg !134
  br label %block_7, !dbg !134

block_10:                                         ; preds = %block_7
  ret void, !dbg !135
}

define void @io.format_int(ptr %0, i64 %1) !dbg !136 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  %7 = alloca i1, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store ptr %0, ptr %2, align 8, !dbg !139
  call void @llvm.dbg.value(metadata ptr %2, metadata !140, metadata !DIExpression()), !dbg !139
  store i64 %1, ptr %3, align 8, !dbg !139
  call void @llvm.dbg.value(metadata ptr %3, metadata !141, metadata !DIExpression()), !dbg !139
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !142
  call void @llvm.dbg.declare(metadata ptr %5, metadata !143, metadata !DIExpression()), !dbg !142
  %12 = load i64, ptr %3, align 8, !dbg !144
  store i64 %12, ptr %6, align 8, !dbg !144
  call void @llvm.dbg.declare(metadata ptr %6, metadata !145, metadata !DIExpression()), !dbg !144
  %13 = load i64, ptr %6, align 8, !dbg !146
  %14 = icmp eq i64 %13, 0, !dbg !146
  br i1 %14, label %block_1, label %block_2, !dbg !146

block_1:                                          ; preds = %block_0
  %15 = load ptr, ptr %2, align 8, !dbg !147
  call void @"array.add:(*[]u32,u32)->void"(ptr %15, i32 48), !dbg !147
  ret void, !dbg !148

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !148

block_3:                                          ; preds = %block_2
  store i1 false, ptr %7, align 1, !dbg !149
  call void @llvm.dbg.declare(metadata ptr %7, metadata !150, metadata !DIExpression()), !dbg !149
  %16 = load i64, ptr %6, align 8, !dbg !152
  %17 = icmp slt i64 %16, 0, !dbg !152
  br i1 %17, label %block_4, label %block_5, !dbg !152

block_4:                                          ; preds = %block_3
  %18 = load i64, ptr %6, align 8, !dbg !153
  %19 = sub i64 0, %18, !dbg !153
  store i64 %19, ptr %6, align 8, !dbg !153
  store i1 true, ptr %7, align 1, !dbg !154
  br label %block_6, !dbg !154

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !154

block_6:                                          ; preds = %block_5, %block_4
  store i64 0, ptr %8, align 8, !dbg !155
  call void @llvm.dbg.declare(metadata ptr %8, metadata !156, metadata !DIExpression()), !dbg !155
  br label %block_7, !dbg !157

block_7:                                          ; preds = %block_8, %block_6
  %20 = load i64, ptr %6, align 8, !dbg !157
  %21 = icmp sgt i64 %20, 0, !dbg !157
  br i1 %21, label %block_8, label %block_9, !dbg !157

block_8:                                          ; preds = %block_7
  %22 = load i64, ptr %6, align 8, !dbg !158
  %23 = srem i64 %22, 10, !dbg !158
  store i64 %23, ptr %9, align 8, !dbg !158
  call void @llvm.dbg.declare(metadata ptr %9, metadata !159, metadata !DIExpression()), !dbg !158
  %24 = load i64, ptr %6, align 8, !dbg !160
  %25 = sdiv i64 %24, 10, !dbg !160
  store i64 %25, ptr %6, align 8, !dbg !160
  %26 = load i64, ptr %9, align 8, !dbg !161
  %27 = trunc i64 %26 to i8, !dbg !161
  %28 = zext i8 %27 to i32, !dbg !161
  %29 = add i32 48, %28, !dbg !161
  store i32 %29, ptr %10, align 4, !dbg !161
  call void @llvm.dbg.declare(metadata ptr %10, metadata !162, metadata !DIExpression()), !dbg !161
  %30 = load i64, ptr %8, align 8, !dbg !163
  %31 = getelementptr [256 x i32], ptr %5, i64 0, i64 %30, !dbg !163
  %32 = load i32, ptr %10, align 4, !dbg !163
  store i32 %32, ptr %31, align 4, !dbg !163
  %33 = load i64, ptr %8, align 8, !dbg !164
  %34 = add i64 %33, 1, !dbg !164
  store i64 %34, ptr %8, align 8, !dbg !164
  br label %block_7, !dbg !164

block_9:                                          ; preds = %block_7
  %35 = load i1, ptr %7, align 1, !dbg !165
  br i1 %35, label %block_10, label %block_11, !dbg !165

block_10:                                         ; preds = %block_9
  %36 = load ptr, ptr %2, align 8, !dbg !165
  call void @"array.add:(*[]u32,u32)->void"(ptr %36, i32 45), !dbg !165
  br label %block_12, !dbg !165

block_11:                                         ; preds = %block_9
  br label %block_12, !dbg !165

block_12:                                         ; preds = %block_11, %block_10
  %37 = load i64, ptr %8, align 8, !dbg !166
  store i64 0, ptr %11, align 8, !dbg !166
  br label %block_13, !dbg !166

block_13:                                         ; preds = %block_15, %block_12
  %38 = load i64, ptr %11, align 8, !dbg !166
  %39 = icmp ult i64 %38, %37, !dbg !166
  br i1 %39, label %block_14, label %block_16, !dbg !166

block_14:                                         ; preds = %block_13
  call void @llvm.dbg.declare(metadata ptr %11, metadata !167, metadata !DIExpression()), !dbg !166
  %40 = load ptr, ptr %2, align 8, !dbg !168
  %41 = load i64, ptr %8, align 8, !dbg !168
  %42 = load i64, ptr %11, align 8, !dbg !168
  %43 = sub i64 %41, %42, !dbg !168
  %44 = sub i64 %43, 1, !dbg !168
  %45 = getelementptr [256 x i32], ptr %5, i64 0, i64 %44, !dbg !168
  %46 = load i32, ptr %45, align 4, !dbg !168
  call void @"array.add:(*[]u32,u32)->void"(ptr %40, i32 %46), !dbg !168
  br label %block_15, !dbg !168

block_15:                                         ; preds = %block_14
  %47 = load i64, ptr %11, align 8, !dbg !168
  %48 = add i64 %47, 1, !dbg !168
  store i64 %48, ptr %11, align 8, !dbg !168
  br label %block_13, !dbg !168

block_16:                                         ; preds = %block_13
  ret void, !dbg !169
}

define void @io.print_typetype(ptr %0, ptr %1) !dbg !170 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %init.TypeInfo, align 8
  %4 = alloca %string, align 8
  %5 = alloca %string, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.1, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca %init.TypeInfo, align 8
  %11 = alloca %string, align 8
  %12 = alloca %string, align 8
  %13 = alloca %string, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca %string, align 8
  %17 = alloca %init.TypeInfo, align 8
  %18 = alloca %string, align 8
  %19 = alloca %string, align 8
  %20 = alloca %init.TypeInfo, align 8
  %21 = alloca %string, align 8
  %22 = alloca %init.TypeInfo, align 8
  %23 = alloca %string, align 8
  %24 = alloca %init.TypeInfo, align 8
  %25 = alloca %string, align 8
  %26 = alloca %string, align 8
  %27 = alloca %string, align 8
  store ptr %0, ptr %2, align 8, !dbg !239
  call void @llvm.dbg.value(metadata ptr %2, metadata !240, metadata !DIExpression()), !dbg !239
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 48, i1 false), !dbg !239
  call void @llvm.dbg.value(metadata ptr %3, metadata !241, metadata !DIExpression()), !dbg !239
  %28 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 0, !dbg !242
  %29 = load i64, ptr %28, align 8, !dbg !242
  switch i64 %29, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_4
    i64 3, label %block_22
    i64 4, label %block_23
    i64 5, label %block_24
    i64 6, label %block_25
    i64 7, label %block_26
    i64 8, label %block_27
    i64 9, label %block_28
  ], !dbg !242

block_2:                                          ; preds = %block_0
  %30 = load ptr, ptr %2, align 8, !dbg !243
  %31 = alloca %string, align 8, !dbg !243
  %String = getelementptr inbounds %string, ptr %31, i32 0, i32 0, !dbg !243
  %Size = getelementptr inbounds %string, ptr %31, i32 0, i32 1, !dbg !243
  store ptr @0, ptr %String, align 8, !dbg !243
  store i64 7, ptr %Size, align 8, !dbg !243
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %31, i64 16, i1 false), !dbg !243
  call void @io.push_string(ptr %30, ptr %4), !dbg !243
  br label %block_1, !dbg !243

block_3:                                          ; preds = %block_0
  %32 = load ptr, ptr %2, align 8, !dbg !244
  %33 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !244
  %34 = getelementptr inbounds %init.BasicType, ptr %33, i32 0, i32 3, !dbg !244
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %34, i64 16, i1 false), !dbg !244
  call void @io.push_string(ptr %32, ptr %5), !dbg !244
  br label %block_1, !dbg !244

block_4:                                          ; preds = %block_0
  %35 = load ptr, ptr %2, align 8, !dbg !245
  %36 = alloca %string, align 8, !dbg !245
  %String1 = getelementptr inbounds %string, ptr %36, i32 0, i32 0, !dbg !245
  %Size2 = getelementptr inbounds %string, ptr %36, i32 0, i32 1, !dbg !245
  store ptr @1, ptr %String1, align 8, !dbg !245
  store i64 3, ptr %Size2, align 8, !dbg !245
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %36, i64 16, i1 false), !dbg !245
  call void @io.push_string(ptr %35, ptr %6), !dbg !245
  %37 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !246
  %38 = getelementptr inbounds %init.FunctionType, ptr %37, i32 0, i32 1, !dbg !246
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %38, i64 16, i1 false), !dbg !246
  call void @llvm.dbg.declare(metadata ptr %7, metadata !247, metadata !DIExpression()), !dbg !246
  %39 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 0, !dbg !248
  %40 = load i64, ptr %39, align 8, !dbg !248
  store i64 0, ptr %8, align 8, !dbg !248
  br label %block_5, !dbg !248

block_5:                                          ; preds = %block_7, %block_4
  %41 = load i64, ptr %8, align 8, !dbg !248
  %42 = icmp ult i64 %41, %40, !dbg !248
  br i1 %42, label %block_6, label %block_8, !dbg !248

block_6:                                          ; preds = %block_5
  %43 = load i64, ptr %8, align 8, !dbg !248
  %44 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 1, !dbg !248
  %45 = load ptr, ptr %44, align 8, !dbg !248
  %46 = getelementptr i64, ptr %45, i64 %43, !dbg !248
  %47 = load i64, ptr %46, align 8, !dbg !248
  store i64 %47, ptr %9, align 8, !dbg !248
  call void @llvm.dbg.declare(metadata ptr %9, metadata !249, metadata !DIExpression()), !dbg !248
  call void @llvm.dbg.declare(metadata ptr %8, metadata !250, metadata !DIExpression()), !dbg !248
  %48 = load ptr, ptr %2, align 8, !dbg !251
  %49 = load i64, ptr %9, align 8, !dbg !251
  %50 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !251
  %51 = getelementptr %init.TypeInfo, ptr %50, i64 %49, !dbg !251
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %51, i64 48, i1 false), !dbg !251
  call void @io.print_typetype(ptr %48, ptr %10), !dbg !251
  %52 = load i64, ptr %8, align 8, !dbg !252
  %53 = add i64 %52, 1, !dbg !252
  %54 = getelementptr inbounds %slice.1, ptr %7, i32 0, i32 0, !dbg !252
  %55 = load i64, ptr %54, align 8, !dbg !252
  %56 = icmp ne i64 %53, %55, !dbg !252
  br i1 %56, label %block_9, label %block_10, !dbg !252

block_9:                                          ; preds = %block_6
  %57 = load ptr, ptr %2, align 8, !dbg !253
  %58 = alloca %string, align 8, !dbg !253
  %String3 = getelementptr inbounds %string, ptr %58, i32 0, i32 0, !dbg !253
  %Size4 = getelementptr inbounds %string, ptr %58, i32 0, i32 1, !dbg !253
  store ptr @2, ptr %String3, align 8, !dbg !253
  store i64 2, ptr %Size4, align 8, !dbg !253
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %58, i64 16, i1 false), !dbg !253
  call void @io.push_string(ptr %57, ptr %11), !dbg !253
  br label %block_11, !dbg !253

block_10:                                         ; preds = %block_6
  br label %block_11, !dbg !253

block_11:                                         ; preds = %block_10, %block_9
  br label %block_7, !dbg !253

block_7:                                          ; preds = %block_11
  %59 = load i64, ptr %8, align 8, !dbg !253
  %60 = add i64 %59, 1, !dbg !253
  store i64 %60, ptr %8, align 8, !dbg !253
  br label %block_5, !dbg !253

block_8:                                          ; preds = %block_5
  %61 = load ptr, ptr %2, align 8, !dbg !254
  %62 = alloca %string, align 8, !dbg !254
  %String5 = getelementptr inbounds %string, ptr %62, i32 0, i32 0, !dbg !254
  %Size6 = getelementptr inbounds %string, ptr %62, i32 0, i32 1, !dbg !254
  store ptr @3, ptr %String5, align 8, !dbg !254
  store i64 1, ptr %Size6, align 8, !dbg !254
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %62, i64 16, i1 false), !dbg !254
  call void @io.push_string(ptr %61, ptr %12), !dbg !254
  %63 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !255
  %64 = getelementptr inbounds %init.FunctionType, ptr %63, i32 0, i32 0, !dbg !255
  %65 = getelementptr inbounds %slice.1, ptr %64, i32 0, i32 0, !dbg !255
  %66 = load i64, ptr %65, align 8, !dbg !255
  %67 = icmp ne i64 %66, 0, !dbg !255
  br i1 %67, label %block_12, label %block_13, !dbg !255

block_12:                                         ; preds = %block_8
  %68 = load ptr, ptr %2, align 8, !dbg !256
  %69 = alloca %string, align 8, !dbg !256
  %String7 = getelementptr inbounds %string, ptr %69, i32 0, i32 0, !dbg !256
  %Size8 = getelementptr inbounds %string, ptr %69, i32 0, i32 1, !dbg !256
  store ptr @4, ptr %String7, align 8, !dbg !256
  store i64 4, ptr %Size8, align 8, !dbg !256
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %69, i64 16, i1 false), !dbg !256
  call void @io.push_string(ptr %68, ptr %13), !dbg !256
  %70 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !257
  %71 = getelementptr inbounds %init.FunctionType, ptr %70, i32 0, i32 0, !dbg !257
  %72 = getelementptr inbounds %slice.1, ptr %71, i32 0, i32 0, !dbg !257
  %73 = load i64, ptr %72, align 8, !dbg !257
  store i64 0, ptr %14, align 8, !dbg !257
  br label %block_15, !dbg !257

block_15:                                         ; preds = %block_17, %block_12
  %74 = load i64, ptr %14, align 8, !dbg !257
  %75 = icmp ult i64 %74, %73, !dbg !257
  br i1 %75, label %block_16, label %block_18, !dbg !257

block_16:                                         ; preds = %block_15
  %76 = load i64, ptr %14, align 8, !dbg !257
  %77 = getelementptr inbounds %slice.1, ptr %71, i32 0, i32 1, !dbg !257
  %78 = load ptr, ptr %77, align 8, !dbg !257
  %79 = getelementptr i64, ptr %78, i64 %76, !dbg !257
  %80 = load i64, ptr %79, align 8, !dbg !257
  store i64 %80, ptr %15, align 8, !dbg !257
  call void @llvm.dbg.declare(metadata ptr %15, metadata !258, metadata !DIExpression()), !dbg !257
  call void @llvm.dbg.declare(metadata ptr %14, metadata !259, metadata !DIExpression()), !dbg !257
  %81 = load i64, ptr %14, align 8, !dbg !260
  %82 = icmp ne i64 %81, 0, !dbg !260
  br i1 %82, label %block_19, label %block_20, !dbg !260

block_19:                                         ; preds = %block_16
  %83 = load ptr, ptr %2, align 8, !dbg !261
  %84 = alloca %string, align 8, !dbg !261
  %String9 = getelementptr inbounds %string, ptr %84, i32 0, i32 0, !dbg !261
  %Size10 = getelementptr inbounds %string, ptr %84, i32 0, i32 1, !dbg !261
  store ptr @5, ptr %String9, align 8, !dbg !261
  store i64 2, ptr %Size10, align 8, !dbg !261
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %84, i64 16, i1 false), !dbg !261
  call void @io.push_string(ptr %83, ptr %16), !dbg !261
  br label %block_21, !dbg !261

block_20:                                         ; preds = %block_16
  br label %block_21, !dbg !261

block_21:                                         ; preds = %block_20, %block_19
  %85 = load ptr, ptr %2, align 8, !dbg !262
  %86 = load i64, ptr %15, align 8, !dbg !262
  %87 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !262
  %88 = getelementptr %init.TypeInfo, ptr %87, i64 %86, !dbg !262
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %88, i64 48, i1 false), !dbg !262
  call void @io.print_typetype(ptr %85, ptr %17), !dbg !262
  br label %block_17, !dbg !262

block_17:                                         ; preds = %block_21
  %89 = load i64, ptr %14, align 8, !dbg !262
  %90 = add i64 %89, 1, !dbg !262
  store i64 %90, ptr %14, align 8, !dbg !262
  br label %block_15, !dbg !262

block_18:                                         ; preds = %block_15
  br label %block_14, !dbg !262

block_13:                                         ; preds = %block_8
  br label %block_14, !dbg !262

block_14:                                         ; preds = %block_13, %block_18
  br label %block_1, !dbg !262

block_22:                                         ; preds = %block_0
  %91 = load ptr, ptr %2, align 8, !dbg !263
  %92 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !263
  %93 = getelementptr inbounds %init.StructType, ptr %92, i32 0, i32 1, !dbg !263
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %93, i64 16, i1 false), !dbg !263
  call void @io.push_string(ptr %91, ptr %18), !dbg !263
  br label %block_1, !dbg !263

block_23:                                         ; preds = %block_0
  %94 = load ptr, ptr %2, align 8, !dbg !264
  %95 = alloca %string, align 8, !dbg !264
  %String11 = getelementptr inbounds %string, ptr %95, i32 0, i32 0, !dbg !264
  %Size12 = getelementptr inbounds %string, ptr %95, i32 0, i32 1, !dbg !264
  store ptr @6, ptr %String11, align 8, !dbg !264
  store i64 1, ptr %Size12, align 8, !dbg !264
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %95, i64 16, i1 false), !dbg !264
  call void @io.push_string(ptr %94, ptr %19), !dbg !264
  %96 = load ptr, ptr %2, align 8, !dbg !265
  %97 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !265
  %98 = getelementptr inbounds %init.PointerType, ptr %97, i32 0, i32 0, !dbg !265
  %99 = load i64, ptr %98, align 8, !dbg !265
  %100 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !265
  %101 = getelementptr %init.TypeInfo, ptr %100, i64 %99, !dbg !265
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %101, i64 48, i1 false), !dbg !265
  call void @io.print_typetype(ptr %96, ptr %20), !dbg !265
  br label %block_1, !dbg !265

block_24:                                         ; preds = %block_0
  %102 = load ptr, ptr %2, align 8, !dbg !266
  %103 = alloca %string, align 8, !dbg !266
  %String13 = getelementptr inbounds %string, ptr %103, i32 0, i32 0, !dbg !266
  %Size14 = getelementptr inbounds %string, ptr %103, i32 0, i32 1, !dbg !266
  store ptr @7, ptr %String13, align 8, !dbg !266
  store i64 3, ptr %Size14, align 8, !dbg !266
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %103, i64 16, i1 false), !dbg !266
  call void @io.push_string(ptr %102, ptr %21), !dbg !266
  %104 = load ptr, ptr %2, align 8, !dbg !267
  %105 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !267
  %106 = getelementptr inbounds %init.ArrayType, ptr %105, i32 0, i32 0, !dbg !267
  %107 = load i64, ptr %106, align 8, !dbg !267
  %108 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !267
  %109 = getelementptr %init.TypeInfo, ptr %108, i64 %107, !dbg !267
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %109, i64 48, i1 false), !dbg !267
  call void @io.print_typetype(ptr %104, ptr %22), !dbg !267
  br label %block_1, !dbg !267

block_25:                                         ; preds = %block_0
  %110 = load ptr, ptr %2, align 8, !dbg !268
  %111 = alloca %string, align 8, !dbg !268
  %String15 = getelementptr inbounds %string, ptr %111, i32 0, i32 0, !dbg !268
  %Size16 = getelementptr inbounds %string, ptr %111, i32 0, i32 1, !dbg !268
  store ptr @8, ptr %String15, align 8, !dbg !268
  store i64 2, ptr %Size16, align 8, !dbg !268
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %111, i64 16, i1 false), !dbg !268
  call void @io.push_string(ptr %110, ptr %23), !dbg !268
  %112 = load ptr, ptr %2, align 8, !dbg !269
  %113 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !269
  %114 = getelementptr inbounds %init.SliceType, ptr %113, i32 0, i32 0, !dbg !269
  %115 = load i64, ptr %114, align 8, !dbg !269
  %116 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !269
  %117 = getelementptr %init.TypeInfo, ptr %116, i64 %115, !dbg !269
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %117, i64 48, i1 false), !dbg !269
  call void @io.print_typetype(ptr %112, ptr %24), !dbg !269
  br label %block_1, !dbg !269

block_26:                                         ; preds = %block_0
  %118 = load ptr, ptr %2, align 8, !dbg !270
  %119 = alloca %string, align 8, !dbg !270
  %String17 = getelementptr inbounds %string, ptr %119, i32 0, i32 0, !dbg !270
  %Size18 = getelementptr inbounds %string, ptr %119, i32 0, i32 1, !dbg !270
  store ptr @9, ptr %String17, align 8, !dbg !270
  store i64 2, ptr %Size18, align 8, !dbg !270
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %119, i64 16, i1 false), !dbg !270
  call void @io.push_string(ptr %118, ptr %25), !dbg !270
  br label %block_1, !dbg !270

block_27:                                         ; preds = %block_0
  %120 = load ptr, ptr %2, align 8, !dbg !271
  %121 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !271
  %122 = getelementptr inbounds %init.EnumType, ptr %121, i32 0, i32 0, !dbg !271
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %122, i64 16, i1 false), !dbg !271
  call void @io.push_string(ptr %120, ptr %26), !dbg !271
  br label %block_1, !dbg !271

block_28:                                         ; preds = %block_0
  %123 = load ptr, ptr %2, align 8, !dbg !272
  %124 = getelementptr inbounds %init.TypeInfo, ptr %3, i32 0, i32 1, !dbg !272
  %125 = getelementptr inbounds %init.GenericType, ptr %124, i32 0, i32 0, !dbg !272
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %125, i64 16, i1 false), !dbg !272
  call void @io.push_string(ptr %123, ptr %27), !dbg !272
  br label %block_1, !dbg !272

block_1:                                          ; preds = %block_28, %block_27, %block_26, %block_25, %block_24, %block_23, %block_22, %block_14, %block_3, %block_2, %block_0
  ret void, !dbg !273
}

define void @io.print_type(ptr %0, ptr %1) !dbg !274 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %init.Arg, align 8
  %4 = alloca %init.TypeInfo, align 8
  %5 = alloca %init.BasicType, align 8
  %6 = alloca %string, align 8
  %7 = alloca %string, align 8
  %8 = alloca %string, align 8
  %9 = alloca %string, align 8
  %10 = alloca %string, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca float, align 4
  %22 = alloca double, align 8
  %23 = alloca i64, align 8
  %24 = alloca %init.TypeInfo, align 8
  %25 = alloca %init.TypeInfo, align 8
  %26 = alloca %init.StructType, align 8
  %27 = alloca %string, align 8
  %28 = alloca %string, align 8
  %29 = alloca i64, align 8
  %30 = alloca %init.StructMember, align 8
  %31 = alloca %slice.8, align 8
  %32 = alloca [1 x %init.Arg], align 8
  %33 = alloca %string, align 8
  %34 = alloca %string, align 8
  %35 = alloca %string, align 8
  %36 = alloca %string, align 8
  %37 = alloca ptr, align 8
  %38 = alloca %init.StructType, align 8
  %39 = alloca i64, align 8
  %40 = alloca %init.Arg, align 8
  %41 = alloca %init.Arg, align 8
  %42 = alloca %init.Arg, align 8
  %43 = alloca %string, align 8
  %44 = alloca %string, align 8
  store ptr %0, ptr %2, align 8, !dbg !281
  call void @llvm.dbg.value(metadata ptr %2, metadata !282, metadata !DIExpression()), !dbg !281
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !281
  call void @llvm.dbg.value(metadata ptr %3, metadata !283, metadata !DIExpression()), !dbg !281
  %45 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 0, !dbg !284
  %46 = load i64, ptr %45, align 8, !dbg !284
  %47 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !284
  %48 = getelementptr %init.TypeInfo, ptr %47, i64 %46, !dbg !284
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %48, i64 48, i1 false), !dbg !284
  call void @llvm.dbg.declare(metadata ptr %4, metadata !285, metadata !DIExpression()), !dbg !284
  %49 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 0, !dbg !286
  %50 = load i64, ptr %49, align 8, !dbg !286
  switch i64 %50, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_52
    i64 3, label %block_53
    i64 4, label %block_61
    i64 5, label %block_62
    i64 6, label %block_63
    i64 7, label %block_64
    i64 8, label %block_65
    i64 9, label %block_66
  ], !dbg !286

block_2:                                          ; preds = %block_0
  br label %block_1, !dbg !286

block_3:                                          ; preds = %block_0
  %51 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 1, !dbg !287
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %51, i64 32, i1 false), !dbg !287
  call void @llvm.dbg.declare(metadata ptr %5, metadata !288, metadata !DIExpression()), !dbg !287
  %52 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !289
  %53 = load i64, ptr %52, align 8, !dbg !289
  %54 = icmp eq i64 %53, 0, !dbg !289
  br i1 %54, label %block_4, label %block_5, !dbg !289

block_4:                                          ; preds = %block_3
  %55 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !290
  %56 = load ptr, ptr %55, align 8, !dbg !290
  %57 = load i1, ptr %56, align 1, !dbg !290
  br i1 %57, label %block_7, label %block_8, !dbg !290

block_7:                                          ; preds = %block_4
  %58 = load ptr, ptr %2, align 8, !dbg !291
  %59 = alloca %string, align 8, !dbg !291
  %String = getelementptr inbounds %string, ptr %59, i32 0, i32 0, !dbg !291
  %Size = getelementptr inbounds %string, ptr %59, i32 0, i32 1, !dbg !291
  store ptr @10, ptr %String, align 8, !dbg !291
  store i64 4, ptr %Size, align 8, !dbg !291
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %59, i64 16, i1 false), !dbg !291
  call void @io.push_string(ptr %58, ptr %6), !dbg !291
  br label %block_9, !dbg !291

block_8:                                          ; preds = %block_4
  %60 = load ptr, ptr %2, align 8, !dbg !292
  %61 = alloca %string, align 8, !dbg !292
  %String1 = getelementptr inbounds %string, ptr %61, i32 0, i32 0, !dbg !292
  %Size2 = getelementptr inbounds %string, ptr %61, i32 0, i32 1, !dbg !292
  store ptr @11, ptr %String1, align 8, !dbg !292
  store i64 5, ptr %Size2, align 8, !dbg !292
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %61, i64 16, i1 false), !dbg !292
  call void @io.push_string(ptr %60, ptr %7), !dbg !292
  br label %block_9, !dbg !292

block_9:                                          ; preds = %block_8, %block_7
  br label %block_6, !dbg !292

block_5:                                          ; preds = %block_3
  %62 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !293
  %63 = load i64, ptr %62, align 8, !dbg !293
  %64 = icmp eq i64 %63, 1, !dbg !293
  br i1 %64, label %block_10, label %block_11, !dbg !293

block_10:                                         ; preds = %block_5
  %65 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !294
  %66 = load ptr, ptr %65, align 8, !dbg !294
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %66, i64 16, i1 false), !dbg !294
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !294
  call void @llvm.dbg.declare(metadata ptr %9, metadata !295, metadata !DIExpression()), !dbg !294
  %67 = load ptr, ptr %2, align 8, !dbg !296
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %9, i64 16, i1 false), !dbg !296
  call void @io.push_string(ptr %67, ptr %10), !dbg !296
  br label %block_12, !dbg !296

block_11:                                         ; preds = %block_5
  %68 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !297
  %69 = load i64, ptr %68, align 8, !dbg !297
  %70 = icmp eq i64 %69, 2, !dbg !297
  br i1 %70, label %block_13, label %block_14, !dbg !297

block_13:                                         ; preds = %block_11
  %71 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !298
  %72 = load ptr, ptr %71, align 8, !dbg !298
  %73 = load i8, ptr %72, align 1, !dbg !298
  %74 = zext i8 %73 to i64, !dbg !298
  store i64 %74, ptr %11, align 8, !dbg !298
  call void @llvm.dbg.declare(metadata ptr %11, metadata !299, metadata !DIExpression()), !dbg !298
  %75 = load ptr, ptr %2, align 8, !dbg !300
  %76 = load i64, ptr %11, align 8, !dbg !300
  call void @io.format_uint(ptr %75, i64 %76), !dbg !300
  br label %block_15, !dbg !300

block_14:                                         ; preds = %block_11
  %77 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !301
  %78 = load i64, ptr %77, align 8, !dbg !301
  %79 = icmp eq i64 %78, 3, !dbg !301
  br i1 %79, label %block_16, label %block_17, !dbg !301

block_16:                                         ; preds = %block_14
  %80 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !302
  %81 = load ptr, ptr %80, align 8, !dbg !302
  %82 = load i16, ptr %81, align 2, !dbg !302
  %83 = zext i16 %82 to i64, !dbg !302
  store i64 %83, ptr %12, align 8, !dbg !302
  call void @llvm.dbg.declare(metadata ptr %12, metadata !303, metadata !DIExpression()), !dbg !302
  %84 = load ptr, ptr %2, align 8, !dbg !304
  %85 = load i64, ptr %12, align 8, !dbg !304
  call void @io.format_uint(ptr %84, i64 %85), !dbg !304
  br label %block_18, !dbg !304

block_17:                                         ; preds = %block_14
  %86 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !305
  %87 = load i64, ptr %86, align 8, !dbg !305
  %88 = icmp eq i64 %87, 4, !dbg !305
  br i1 %88, label %block_19, label %block_20, !dbg !305

block_19:                                         ; preds = %block_17
  %89 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !306
  %90 = load ptr, ptr %89, align 8, !dbg !306
  %91 = load i32, ptr %90, align 4, !dbg !306
  %92 = zext i32 %91 to i64, !dbg !306
  store i64 %92, ptr %13, align 8, !dbg !306
  call void @llvm.dbg.declare(metadata ptr %13, metadata !307, metadata !DIExpression()), !dbg !306
  %93 = load ptr, ptr %2, align 8, !dbg !308
  %94 = load i64, ptr %13, align 8, !dbg !308
  call void @io.format_uint(ptr %93, i64 %94), !dbg !308
  br label %block_21, !dbg !308

block_20:                                         ; preds = %block_17
  %95 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !309
  %96 = load i64, ptr %95, align 8, !dbg !309
  %97 = icmp eq i64 %96, 5, !dbg !309
  br i1 %97, label %block_22, label %block_23, !dbg !309

block_22:                                         ; preds = %block_20
  %98 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !310
  %99 = load ptr, ptr %98, align 8, !dbg !310
  %100 = load i64, ptr %99, align 8, !dbg !310
  store i64 %100, ptr %14, align 8, !dbg !310
  call void @llvm.dbg.declare(metadata ptr %14, metadata !311, metadata !DIExpression()), !dbg !310
  %101 = load ptr, ptr %2, align 8, !dbg !312
  %102 = load i64, ptr %14, align 8, !dbg !312
  call void @io.format_uint(ptr %101, i64 %102), !dbg !312
  br label %block_24, !dbg !312

block_23:                                         ; preds = %block_20
  %103 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !313
  %104 = load i64, ptr %103, align 8, !dbg !313
  %105 = icmp eq i64 %104, 6, !dbg !313
  br i1 %105, label %block_25, label %block_26, !dbg !313

block_25:                                         ; preds = %block_23
  %106 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !314
  %107 = load ptr, ptr %106, align 8, !dbg !314
  %108 = load i8, ptr %107, align 1, !dbg !314
  %109 = sext i8 %108 to i64, !dbg !314
  store i64 %109, ptr %15, align 8, !dbg !314
  call void @llvm.dbg.declare(metadata ptr %15, metadata !315, metadata !DIExpression()), !dbg !314
  %110 = load ptr, ptr %2, align 8, !dbg !316
  %111 = load i64, ptr %15, align 8, !dbg !316
  call void @io.format_int(ptr %110, i64 %111), !dbg !316
  br label %block_27, !dbg !316

block_26:                                         ; preds = %block_23
  %112 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !317
  %113 = load i64, ptr %112, align 8, !dbg !317
  %114 = icmp eq i64 %113, 7, !dbg !317
  br i1 %114, label %block_28, label %block_29, !dbg !317

block_28:                                         ; preds = %block_26
  %115 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !318
  %116 = load ptr, ptr %115, align 8, !dbg !318
  %117 = load i16, ptr %116, align 2, !dbg !318
  %118 = sext i16 %117 to i64, !dbg !318
  store i64 %118, ptr %16, align 8, !dbg !318
  call void @llvm.dbg.declare(metadata ptr %16, metadata !319, metadata !DIExpression()), !dbg !318
  %119 = load ptr, ptr %2, align 8, !dbg !320
  %120 = load i64, ptr %16, align 8, !dbg !320
  call void @io.format_int(ptr %119, i64 %120), !dbg !320
  br label %block_30, !dbg !320

block_29:                                         ; preds = %block_26
  %121 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !321
  %122 = load i64, ptr %121, align 8, !dbg !321
  %123 = icmp eq i64 %122, 8, !dbg !321
  br i1 %123, label %block_31, label %block_32, !dbg !321

block_31:                                         ; preds = %block_29
  %124 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !322
  %125 = load ptr, ptr %124, align 8, !dbg !322
  %126 = load i32, ptr %125, align 4, !dbg !322
  %127 = sext i32 %126 to i64, !dbg !322
  store i64 %127, ptr %17, align 8, !dbg !322
  call void @llvm.dbg.declare(metadata ptr %17, metadata !323, metadata !DIExpression()), !dbg !322
  %128 = load ptr, ptr %2, align 8, !dbg !324
  %129 = load i64, ptr %17, align 8, !dbg !324
  call void @io.format_int(ptr %128, i64 %129), !dbg !324
  br label %block_33, !dbg !324

block_32:                                         ; preds = %block_29
  %130 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !325
  %131 = load i64, ptr %130, align 8, !dbg !325
  %132 = icmp eq i64 %131, 9, !dbg !325
  br i1 %132, label %block_34, label %block_35, !dbg !325

block_34:                                         ; preds = %block_32
  %133 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !326
  %134 = load ptr, ptr %133, align 8, !dbg !326
  %135 = load i64, ptr %134, align 8, !dbg !326
  store i64 %135, ptr %18, align 8, !dbg !326
  call void @llvm.dbg.declare(metadata ptr %18, metadata !327, metadata !DIExpression()), !dbg !326
  %136 = load ptr, ptr %2, align 8, !dbg !328
  %137 = load i64, ptr %18, align 8, !dbg !328
  call void @io.format_int(ptr %136, i64 %137), !dbg !328
  br label %block_36, !dbg !328

block_35:                                         ; preds = %block_32
  %138 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !329
  %139 = load i64, ptr %138, align 8, !dbg !329
  %140 = icmp eq i64 %139, 14, !dbg !329
  br i1 %140, label %block_37, label %block_38, !dbg !329

block_37:                                         ; preds = %block_35
  %141 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !330
  %142 = load ptr, ptr %141, align 8, !dbg !330
  %143 = load i64, ptr %142, align 8, !dbg !330
  store i64 %143, ptr %19, align 8, !dbg !330
  call void @llvm.dbg.declare(metadata ptr %19, metadata !331, metadata !DIExpression()), !dbg !330
  %144 = load ptr, ptr %2, align 8, !dbg !332
  %145 = load i64, ptr %19, align 8, !dbg !332
  call void @io.format_int(ptr %144, i64 %145), !dbg !332
  br label %block_39, !dbg !332

block_38:                                         ; preds = %block_35
  %146 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !333
  %147 = load i64, ptr %146, align 8, !dbg !333
  %148 = icmp eq i64 %147, 15, !dbg !333
  br i1 %148, label %block_40, label %block_41, !dbg !333

block_40:                                         ; preds = %block_38
  %149 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !334
  %150 = load ptr, ptr %149, align 8, !dbg !334
  %151 = load i64, ptr %150, align 8, !dbg !334
  store i64 %151, ptr %20, align 8, !dbg !334
  call void @llvm.dbg.declare(metadata ptr %20, metadata !335, metadata !DIExpression()), !dbg !334
  %152 = load ptr, ptr %2, align 8, !dbg !336
  %153 = load i64, ptr %20, align 8, !dbg !336
  call void @io.format_uint(ptr %152, i64 %153), !dbg !336
  br label %block_42, !dbg !336

block_41:                                         ; preds = %block_38
  %154 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !337
  %155 = load i64, ptr %154, align 8, !dbg !337
  %156 = icmp eq i64 %155, 10, !dbg !337
  br i1 %156, label %block_43, label %block_44, !dbg !337

block_43:                                         ; preds = %block_41
  %157 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !338
  %158 = load ptr, ptr %157, align 8, !dbg !338
  %159 = load float, ptr %158, align 4, !dbg !338
  store float %159, ptr %21, align 4, !dbg !338
  call void @llvm.dbg.declare(metadata ptr %21, metadata !339, metadata !DIExpression()), !dbg !338
  %160 = load ptr, ptr %2, align 8, !dbg !341
  %161 = load float, ptr %21, align 4, !dbg !341
  call void @"io.format_float:(type,*[]u32,f32,i32)->void"(i64 10, ptr %160, float %161, i32 100), !dbg !341
  br label %block_45, !dbg !341

block_44:                                         ; preds = %block_41
  %162 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !342
  %163 = load i64, ptr %162, align 8, !dbg !342
  %164 = icmp eq i64 %163, 11, !dbg !342
  br i1 %164, label %block_46, label %block_47, !dbg !342

block_46:                                         ; preds = %block_44
  %165 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !343
  %166 = load ptr, ptr %165, align 8, !dbg !343
  %167 = load double, ptr %166, align 8, !dbg !343
  store double %167, ptr %22, align 8, !dbg !343
  call void @llvm.dbg.declare(metadata ptr %22, metadata !344, metadata !DIExpression()), !dbg !343
  %168 = load ptr, ptr %2, align 8, !dbg !346
  %169 = load double, ptr %22, align 8, !dbg !346
  call void @"io.format_float:(type,*[]u32,f64,i32)->void"(i64 11, ptr %168, double %169, i32 100), !dbg !346
  br label %block_48, !dbg !346

block_47:                                         ; preds = %block_44
  %170 = getelementptr inbounds %init.BasicType, ptr %5, i32 0, i32 0, !dbg !347
  %171 = load i64, ptr %170, align 8, !dbg !347
  %172 = icmp eq i64 %171, 16, !dbg !347
  br i1 %172, label %block_49, label %block_50, !dbg !347

block_49:                                         ; preds = %block_47
  %173 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !348
  %174 = load ptr, ptr %173, align 8, !dbg !348
  %175 = load i64, ptr %174, align 8, !dbg !348
  store i64 %175, ptr %23, align 8, !dbg !348
  call void @llvm.dbg.declare(metadata ptr %23, metadata !349, metadata !DIExpression()), !dbg !348
  %176 = load i64, ptr %23, align 8, !dbg !350
  %177 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !350
  %178 = getelementptr %init.TypeInfo, ptr %177, i64 %176, !dbg !350
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %178, i64 48, i1 false), !dbg !350
  call void @llvm.dbg.declare(metadata ptr %24, metadata !351, metadata !DIExpression()), !dbg !350
  %179 = load ptr, ptr %2, align 8, !dbg !352
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %24, i64 48, i1 false), !dbg !352
  call void @io.print_typetype(ptr %179, ptr %25), !dbg !352
  br label %block_51, !dbg !352

block_50:                                         ; preds = %block_47
  %180 = load ptr, ptr %2, align 8, !dbg !353
  call void @"array.add:(*[]u32,u32)->void"(ptr %180, i32 37), !dbg !353
  br label %block_51, !dbg !353

block_51:                                         ; preds = %block_50, %block_49
  br label %block_48, !dbg !353

block_48:                                         ; preds = %block_51, %block_46
  br label %block_45, !dbg !353

block_45:                                         ; preds = %block_48, %block_43
  br label %block_42, !dbg !353

block_42:                                         ; preds = %block_45, %block_40
  br label %block_39, !dbg !353

block_39:                                         ; preds = %block_42, %block_37
  br label %block_36, !dbg !353

block_36:                                         ; preds = %block_39, %block_34
  br label %block_33, !dbg !353

block_33:                                         ; preds = %block_36, %block_31
  br label %block_30, !dbg !353

block_30:                                         ; preds = %block_33, %block_28
  br label %block_27, !dbg !353

block_27:                                         ; preds = %block_30, %block_25
  br label %block_24, !dbg !353

block_24:                                         ; preds = %block_27, %block_22
  br label %block_21, !dbg !353

block_21:                                         ; preds = %block_24, %block_19
  br label %block_18, !dbg !353

block_18:                                         ; preds = %block_21, %block_16
  br label %block_15, !dbg !353

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !353

block_12:                                         ; preds = %block_15, %block_10
  br label %block_6, !dbg !353

block_6:                                          ; preds = %block_12, %block_9
  br label %block_1, !dbg !353

block_52:                                         ; preds = %block_0
  br label %block_1, !dbg !353

block_53:                                         ; preds = %block_0
  %181 = getelementptr inbounds %init.TypeInfo, ptr %4, i32 0, i32 1, !dbg !354
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %181, i64 40, i1 false), !dbg !354
  call void @llvm.dbg.declare(metadata ptr %26, metadata !355, metadata !DIExpression()), !dbg !354
  %182 = load ptr, ptr %2, align 8, !dbg !356
  %183 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 1, !dbg !356
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %183, i64 16, i1 false), !dbg !356
  call void @io.push_string(ptr %182, ptr %27), !dbg !356
  %184 = load ptr, ptr %2, align 8, !dbg !357
  %185 = alloca %string, align 8, !dbg !357
  %String3 = getelementptr inbounds %string, ptr %185, i32 0, i32 0, !dbg !357
  %Size4 = getelementptr inbounds %string, ptr %185, i32 0, i32 1, !dbg !357
  store ptr @12, ptr %String3, align 8, !dbg !357
  store i64 3, ptr %Size4, align 8, !dbg !357
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %185, i64 16, i1 false), !dbg !357
  call void @io.push_string(ptr %184, ptr %28), !dbg !357
  %186 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !358
  %187 = getelementptr inbounds %slice, ptr %186, i32 0, i32 0, !dbg !358
  %188 = load i64, ptr %187, align 8, !dbg !358
  store i64 0, ptr %29, align 8, !dbg !358
  br label %block_54, !dbg !358

block_54:                                         ; preds = %block_56, %block_53
  %189 = load i64, ptr %29, align 8, !dbg !358
  %190 = icmp ult i64 %189, %188, !dbg !358
  br i1 %190, label %block_55, label %block_57, !dbg !358

block_55:                                         ; preds = %block_54
  call void @llvm.dbg.declare(metadata ptr %29, metadata !359, metadata !DIExpression()), !dbg !358
  %191 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !360
  %192 = load i64, ptr %29, align 8, !dbg !360
  %193 = getelementptr inbounds %slice, ptr %191, i32 0, i32 1, !dbg !360
  %194 = load ptr, ptr %193, align 8, !dbg !360
  %195 = getelementptr %init.StructMember, ptr %194, i64 %192, !dbg !360
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %195, i64 24, i1 false), !dbg !360
  call void @llvm.dbg.declare(metadata ptr %30, metadata !361, metadata !DIExpression()), !dbg !360
  %196 = getelementptr inbounds %slice.8, ptr %31, i32 0, i32 0, !dbg !362
  %197 = getelementptr inbounds %slice.8, ptr %31, i32 0, i32 1, !dbg !362
  store i64 1, ptr %196, align 8, !dbg !362
  store ptr %32, ptr %197, align 8, !dbg !362
  %198 = alloca %string, align 8, !dbg !362
  %String5 = getelementptr inbounds %string, ptr %198, i32 0, i32 0, !dbg !362
  %Size6 = getelementptr inbounds %string, ptr %198, i32 0, i32 1, !dbg !362
  store ptr @13, ptr %String5, align 8, !dbg !362
  store i64 7, ptr %Size6, align 8, !dbg !362
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %198, i64 16, i1 false), !dbg !362
  %199 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 0, !dbg !362
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %199, i64 16, i1 false), !dbg !362
  %200 = getelementptr [1 x %init.Arg], ptr %32, i64 0, i64 0, !dbg !362
  %201 = getelementptr inbounds %init.Arg, ptr %200, i32 0, i32 0, !dbg !362
  %202 = getelementptr inbounds %init.Arg, ptr %200, i32 0, i32 1, !dbg !362
  store i64 1, ptr %201, align 8, !dbg !362
  store ptr %34, ptr %202, align 8, !dbg !362
  call void @io.print(ptr %33, ptr %31), !dbg !362
  %203 = load ptr, ptr %2, align 8, !dbg !363
  %204 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 0, !dbg !363
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %204, i64 16, i1 false), !dbg !363
  call void @io.push_string(ptr %203, ptr %35), !dbg !363
  %205 = load ptr, ptr %2, align 8, !dbg !364
  %206 = alloca %string, align 8, !dbg !364
  %String7 = getelementptr inbounds %string, ptr %206, i32 0, i32 0, !dbg !364
  %Size8 = getelementptr inbounds %string, ptr %206, i32 0, i32 1, !dbg !364
  store ptr @14, ptr %String7, align 8, !dbg !364
  store i64 3, ptr %Size8, align 8, !dbg !364
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %206, i64 16, i1 false), !dbg !364
  call void @io.push_string(ptr %205, ptr %36), !dbg !364
  %207 = getelementptr inbounds %init.Arg, ptr %3, i32 0, i32 1, !dbg !365
  %208 = load ptr, ptr %207, align 8, !dbg !365
  store ptr %208, ptr %37, align 8, !dbg !365
  call void @llvm.dbg.declare(metadata ptr %37, metadata !366, metadata !DIExpression()), !dbg !365
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %26, i64 40, i1 false), !dbg !367
  %209 = load i64, ptr %29, align 8, !dbg !367
  %210 = call i64 @init.get_struct_member_offset(ptr %38, i64 %209), !dbg !367
  store i64 %210, ptr %39, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata ptr %39, metadata !368, metadata !DIExpression()), !dbg !367
  %211 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 1, !dbg !369
  %212 = load i64, ptr %211, align 8, !dbg !369
  %213 = getelementptr inbounds %init.Arg, ptr %40, i32 0, i32 0, !dbg !369
  store i64 %212, ptr %213, align 8, !dbg !369
  %214 = load ptr, ptr %37, align 8, !dbg !369
  %215 = load i64, ptr %39, align 8, !dbg !369
  %216 = getelementptr i8, ptr %214, i64 %215, !dbg !369
  %217 = getelementptr inbounds %init.Arg, ptr %40, i32 0, i32 1, !dbg !369
  store ptr %216, ptr %217, align 8, !dbg !369
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %40, i64 16, i1 false), !dbg !369
  call void @llvm.dbg.declare(metadata ptr %41, metadata !370, metadata !DIExpression()), !dbg !369
  %218 = getelementptr inbounds %init.Arg, ptr %41, i32 0, i32 0, !dbg !371
  %219 = getelementptr inbounds %init.StructMember, ptr %30, i32 0, i32 1, !dbg !371
  %220 = load i64, ptr %219, align 8, !dbg !371
  store i64 %220, ptr %218, align 8, !dbg !371
  %221 = load ptr, ptr %2, align 8, !dbg !372
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %41, i64 16, i1 false), !dbg !372
  call void @io.print_type(ptr %221, ptr %42), !dbg !372
  %222 = load i64, ptr %29, align 8, !dbg !373
  %223 = add i64 %222, 1, !dbg !373
  %224 = getelementptr inbounds %init.StructType, ptr %26, i32 0, i32 0, !dbg !373
  %225 = getelementptr inbounds %slice, ptr %224, i32 0, i32 0, !dbg !373
  %226 = load i64, ptr %225, align 8, !dbg !373
  %227 = icmp ne i64 %223, %226, !dbg !373
  br i1 %227, label %block_58, label %block_59, !dbg !373

block_58:                                         ; preds = %block_55
  %228 = load ptr, ptr %2, align 8, !dbg !374
  %229 = alloca %string, align 8, !dbg !374
  %String9 = getelementptr inbounds %string, ptr %229, i32 0, i32 0, !dbg !374
  %Size10 = getelementptr inbounds %string, ptr %229, i32 0, i32 1, !dbg !374
  store ptr @15, ptr %String9, align 8, !dbg !374
  store i64 2, ptr %Size10, align 8, !dbg !374
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %229, i64 16, i1 false), !dbg !374
  call void @io.push_string(ptr %228, ptr %43), !dbg !374
  br label %block_60, !dbg !374

block_59:                                         ; preds = %block_55
  br label %block_60, !dbg !374

block_60:                                         ; preds = %block_59, %block_58
  br label %block_56, !dbg !374

block_56:                                         ; preds = %block_60
  %230 = load i64, ptr %29, align 8, !dbg !374
  %231 = add i64 %230, 1, !dbg !374
  store i64 %231, ptr %29, align 8, !dbg !374
  br label %block_54, !dbg !374

block_57:                                         ; preds = %block_54
  %232 = load ptr, ptr %2, align 8, !dbg !375
  %233 = alloca %string, align 8, !dbg !375
  %String11 = getelementptr inbounds %string, ptr %233, i32 0, i32 0, !dbg !375
  %Size12 = getelementptr inbounds %string, ptr %233, i32 0, i32 1, !dbg !375
  store ptr @16, ptr %String11, align 8, !dbg !375
  store i64 2, ptr %Size12, align 8, !dbg !375
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %233, i64 16, i1 false), !dbg !375
  call void @io.push_string(ptr %232, ptr %44), !dbg !375
  br label %block_1, !dbg !375

block_61:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_62:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_63:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_64:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_65:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_66:                                         ; preds = %block_0
  br label %block_1, !dbg !375

block_1:                                          ; preds = %block_66, %block_65, %block_64, %block_63, %block_62, %block_61, %block_57, %block_52, %block_6, %block_2, %block_0
  ret void, !dbg !376
}

define void @io.builder_to_string(ptr %0, ptr %1) !dbg !377 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %mem.Allocator, align 8
  %5 = alloca %mem.Allocator, align 8
  %6 = alloca %slice.7, align 8
  %7 = alloca %slice.7, align 8
  %8 = alloca i64, align 8
  %9 = alloca ptr, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store ptr %1, ptr %2, align 8, !dbg !383
  call void @llvm.dbg.value(metadata ptr %2, metadata !384, metadata !DIExpression()), !dbg !383
  %12 = load ptr, ptr %2, align 8, !dbg !385
  store ptr %12, ptr %3, align 8, !dbg !385
  call void @llvm.dbg.declare(metadata ptr %3, metadata !386, metadata !DIExpression()), !dbg !385
  call void @mem.create_generic_allocator(ptr %4), !dbg !387
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !387
  call void @llvm.dbg.declare(metadata ptr %5, metadata !388, metadata !DIExpression()), !dbg !387
  call void @"array.create:(type,*mem.Allocator)->[]u8"(ptr %6, i64 2, ptr %5), !dbg !402
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %6, i64 16, i1 false), !dbg !402
  call void @llvm.dbg.declare(metadata ptr %7, metadata !403, metadata !DIExpression()), !dbg !402
  %13 = load ptr, ptr %3, align 8, !dbg !404
  %14 = getelementptr inbounds %slice.3, ptr %13, i32 0, i32 0, !dbg !404
  %15 = load i64, ptr %14, align 8, !dbg !404
  store i64 0, ptr %8, align 8, !dbg !404
  br label %block_1, !dbg !404

block_1:                                          ; preds = %block_3, %block_0
  %16 = load i64, ptr %8, align 8, !dbg !404
  %17 = icmp ult i64 %16, %15, !dbg !404
  br i1 %17, label %block_2, label %block_4, !dbg !404

block_2:                                          ; preds = %block_1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !405, metadata !DIExpression()), !dbg !404
  %18 = load ptr, ptr %3, align 8, !dbg !406
  %19 = getelementptr inbounds %slice.3, ptr %18, i32 0, i32 1, !dbg !406
  %20 = load ptr, ptr %19, align 8, !dbg !406
  %21 = load i64, ptr %8, align 8, !dbg !406
  %22 = getelementptr i32, ptr %20, i64 %21, !dbg !406
  store ptr %22, ptr %9, align 8, !dbg !406
  call void @llvm.dbg.declare(metadata ptr %9, metadata !407, metadata !DIExpression()), !dbg !406
  %23 = load ptr, ptr %9, align 8, !dbg !408
  %24 = getelementptr i8, ptr %23, i64 3, !dbg !408
  store ptr %24, ptr %9, align 8, !dbg !408
  br label %block_5, !dbg !409

block_5:                                          ; preds = %block_6, %block_2
  %25 = load ptr, ptr %9, align 8, !dbg !409
  %26 = load i8, ptr %25, align 1, !dbg !409
  %27 = icmp eq i8 %26, 0, !dbg !409
  br i1 %27, label %block_6, label %block_7, !dbg !409

block_6:                                          ; preds = %block_5
  %28 = load ptr, ptr %9, align 8, !dbg !410
  %29 = getelementptr i8, ptr %28, i64 -1, !dbg !410
  store ptr %29, ptr %9, align 8, !dbg !410
  br label %block_5, !dbg !410

block_7:                                          ; preds = %block_5
  %30 = load ptr, ptr %9, align 8, !dbg !411
  %31 = call i64 @str.get_codepoint_size(ptr %30), !dbg !411
  store i64 %31, ptr %10, align 8, !dbg !411
  call void @llvm.dbg.declare(metadata ptr %10, metadata !412, metadata !DIExpression()), !dbg !411
  %32 = load i64, ptr %10, align 8, !dbg !413
  store i64 0, ptr %11, align 8, !dbg !413
  br label %block_8, !dbg !413

block_8:                                          ; preds = %block_10, %block_7
  %33 = load i64, ptr %11, align 8, !dbg !413
  %34 = icmp ult i64 %33, %32, !dbg !413
  br i1 %34, label %block_9, label %block_11, !dbg !413

block_9:                                          ; preds = %block_8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !414, metadata !DIExpression()), !dbg !413
  %35 = load ptr, ptr %9, align 8, !dbg !415
  %36 = load i64, ptr %11, align 8, !dbg !415
  %37 = sub i64 0, %36, !dbg !415
  %38 = getelementptr i8, ptr %35, i64 %37, !dbg !415
  %39 = load i8, ptr %38, align 1, !dbg !415
  call void @"array.add:(*[]u8,u8)->void"(ptr %7, i8 %39), !dbg !415
  br label %block_10, !dbg !415

block_10:                                         ; preds = %block_9
  %40 = load i64, ptr %11, align 8, !dbg !415
  %41 = add i64 %40, 1, !dbg !415
  store i64 %41, ptr %11, align 8, !dbg !415
  br label %block_8, !dbg !415

block_11:                                         ; preds = %block_8
  br label %block_3, !dbg !415

block_3:                                          ; preds = %block_11
  %42 = load i64, ptr %8, align 8, !dbg !415
  %43 = add i64 %42, 1, !dbg !415
  store i64 %43, ptr %8, align 8, !dbg !415
  br label %block_1, !dbg !415

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !416
  ret void, !dbg !416
}

define void @io.print_type_with_formatter(ptr %0, i32 %1, ptr %2) !dbg !417 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %init.Arg, align 8
  %6 = alloca %init.TypeInfo, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %init.Arg, align 8
  store ptr %0, ptr %3, align 8, !dbg !420
  call void @llvm.dbg.value(metadata ptr %3, metadata !421, metadata !DIExpression()), !dbg !420
  store i32 %1, ptr %4, align 4, !dbg !420
  call void @llvm.dbg.value(metadata ptr %4, metadata !422, metadata !DIExpression()), !dbg !420
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !420
  call void @llvm.dbg.value(metadata ptr %5, metadata !423, metadata !DIExpression()), !dbg !420
  %11 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 0, !dbg !424
  %12 = load i64, ptr %11, align 8, !dbg !424
  %13 = load ptr, ptr getelementptr inbounds (%slice.6, ptr @init.type_table, i32 0, i32 1), align 8, !dbg !424
  %14 = getelementptr %init.TypeInfo, ptr %13, i64 %12, !dbg !424
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %14, i64 48, i1 false), !dbg !424
  call void @llvm.dbg.declare(metadata ptr %6, metadata !425, metadata !DIExpression()), !dbg !424
  %15 = load i32, ptr %4, align 4, !dbg !426
  %16 = icmp eq i32 %15, 115, !dbg !426
  %17 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 0, !dbg !426
  %18 = load i64, ptr %17, align 8, !dbg !426
  %19 = icmp eq i64 %18, 4, !dbg !426
  %20 = icmp ne i1 %16, false, !dbg !426
  %21 = icmp ne i1 %19, false, !dbg !426
  %22 = and i1 %20, %21, !dbg !426
  %23 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !426
  %24 = getelementptr inbounds %init.PointerType, ptr %23, i32 0, i32 0, !dbg !426
  %25 = load i64, ptr %24, align 8, !dbg !426
  %26 = icmp eq i64 %25, 2, !dbg !426
  %27 = icmp ne i1 %22, false, !dbg !426
  %28 = icmp ne i1 %26, false, !dbg !426
  %29 = and i1 %27, %28, !dbg !426
  br i1 %29, label %block_1, label %block_2, !dbg !426

block_1:                                          ; preds = %block_0
  %30 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !427
  %31 = load ptr, ptr %30, align 8, !dbg !427
  %32 = load ptr, ptr %31, align 8, !dbg !427
  store ptr %32, ptr %7, align 8, !dbg !427
  call void @llvm.dbg.declare(metadata ptr %7, metadata !428, metadata !DIExpression()), !dbg !427
  store i64 0, ptr %8, align 8, !dbg !429
  call void @llvm.dbg.declare(metadata ptr %8, metadata !430, metadata !DIExpression()), !dbg !429
  br label %block_4, !dbg !429

block_4:                                          ; preds = %block_6, %block_1
  %33 = load ptr, ptr %7, align 8, !dbg !429
  %34 = load i64, ptr %8, align 8, !dbg !429
  %35 = getelementptr i8, ptr %33, i64 %34, !dbg !429
  %36 = load i8, ptr %35, align 1, !dbg !429
  %37 = zext i8 %36 to i32, !dbg !429
  %38 = icmp ne i32 %37, 0, !dbg !429
  br i1 %38, label %block_5, label %block_7, !dbg !429

block_5:                                          ; preds = %block_4
  %39 = load ptr, ptr %3, align 8, !dbg !431
  %40 = load ptr, ptr %7, align 8, !dbg !431
  %41 = load i64, ptr %8, align 8, !dbg !431
  %42 = getelementptr i8, ptr %40, i64 %41, !dbg !431
  %43 = load i8, ptr %42, align 1, !dbg !431
  %44 = zext i8 %43 to i32, !dbg !431
  call void @"array.add:(*[]u32,u32)->void"(ptr %39, i32 %44), !dbg !431
  br label %block_6, !dbg !431

block_6:                                          ; preds = %block_5
  %45 = load i64, ptr %8, align 8, !dbg !431
  %46 = add i64 %45, 1, !dbg !431
  store i64 %46, ptr %8, align 8, !dbg !431
  %47 = load i64, ptr %8, align 8, !dbg !431
  br label %block_4, !dbg !431

block_7:                                          ; preds = %block_4
  br label %block_3, !dbg !431

block_2:                                          ; preds = %block_0
  %48 = load i32, ptr %4, align 4, !dbg !432
  %49 = icmp eq i32 %48, 99, !dbg !432
  %50 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 0, !dbg !432
  %51 = load i64, ptr %50, align 8, !dbg !432
  %52 = icmp eq i64 %51, 1, !dbg !432
  %53 = icmp ne i1 %49, false, !dbg !432
  %54 = icmp ne i1 %52, false, !dbg !432
  %55 = and i1 %53, %54, !dbg !432
  %56 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !432
  %57 = getelementptr inbounds %init.BasicType, ptr %56, i32 0, i32 0, !dbg !432
  %58 = load i64, ptr %57, align 8, !dbg !432
  %59 = icmp eq i64 %58, 2, !dbg !432
  %60 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !432
  %61 = getelementptr inbounds %init.BasicType, ptr %60, i32 0, i32 0, !dbg !432
  %62 = load i64, ptr %61, align 8, !dbg !432
  %63 = icmp eq i64 %62, 4, !dbg !432
  %64 = icmp ne i1 %59, false, !dbg !432
  %65 = icmp ne i1 %63, false, !dbg !432
  %66 = or i1 %64, %65, !dbg !432
  %67 = icmp ne i1 %55, false, !dbg !432
  %68 = icmp ne i1 %66, false, !dbg !432
  %69 = and i1 %67, %68, !dbg !432
  br i1 %69, label %block_8, label %block_9, !dbg !432

block_8:                                          ; preds = %block_2
  store i32 0, ptr %9, align 4, !dbg !433
  call void @llvm.dbg.declare(metadata ptr %9, metadata !434, metadata !DIExpression()), !dbg !433
  %70 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !435
  %71 = getelementptr inbounds %init.BasicType, ptr %70, i32 0, i32 0, !dbg !435
  %72 = load i64, ptr %71, align 8, !dbg !435
  %73 = icmp eq i64 %72, 2, !dbg !435
  br i1 %73, label %block_11, label %block_12, !dbg !435

block_11:                                         ; preds = %block_8
  %74 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !436
  %75 = load ptr, ptr %74, align 8, !dbg !436
  %76 = load i8, ptr %75, align 1, !dbg !436
  %77 = zext i8 %76 to i32, !dbg !436
  store i32 %77, ptr %9, align 4, !dbg !436
  br label %block_13, !dbg !436

block_12:                                         ; preds = %block_8
  %78 = getelementptr inbounds %init.TypeInfo, ptr %6, i32 0, i32 1, !dbg !437
  %79 = getelementptr inbounds %init.BasicType, ptr %78, i32 0, i32 0, !dbg !437
  %80 = load i64, ptr %79, align 8, !dbg !437
  %81 = icmp eq i64 %80, 4, !dbg !437
  br i1 %81, label %block_14, label %block_15, !dbg !437

block_14:                                         ; preds = %block_12
  %82 = getelementptr inbounds %init.Arg, ptr %5, i32 0, i32 1, !dbg !438
  %83 = load ptr, ptr %82, align 8, !dbg !438
  %84 = load i32, ptr %83, align 4, !dbg !438
  store i32 %84, ptr %9, align 4, !dbg !438
  br label %block_16, !dbg !438

block_15:                                         ; preds = %block_12
  br label %block_16, !dbg !438

block_16:                                         ; preds = %block_15, %block_14
  br label %block_13, !dbg !438

block_13:                                         ; preds = %block_16, %block_11
  %85 = load ptr, ptr %3, align 8, !dbg !439
  %86 = load i32, ptr %9, align 4, !dbg !439
  call void @"array.add:(*[]u32,u32)->void"(ptr %85, i32 %86), !dbg !439
  br label %block_10, !dbg !439

block_9:                                          ; preds = %block_2
  %87 = load ptr, ptr %3, align 8, !dbg !440
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %5, i64 16, i1 false), !dbg !440
  call void @io.print_type(ptr %87, ptr %10), !dbg !440
  %88 = load i32, ptr %9, align 4, !dbg !441
  %89 = icmp ne i32 %88, 0, !dbg !441
  br i1 %89, label %block_17, label %block_18, !dbg !441

block_17:                                         ; preds = %block_9
  %90 = load ptr, ptr %3, align 8, !dbg !442
  %91 = load i32, ptr %9, align 4, !dbg !442
  call void @"array.add:(*[]u32,u32)->void"(ptr %90, i32 %91), !dbg !442
  br label %block_19, !dbg !442

block_18:                                         ; preds = %block_9
  br label %block_19, !dbg !442

block_19:                                         ; preds = %block_18, %block_17
  br label %block_10, !dbg !442

block_10:                                         ; preds = %block_19, %block_13
  br label %block_3, !dbg !442

block_3:                                          ; preds = %block_10, %block_7
  ret void, !dbg !443
}

define void @io.__internal_print(ptr %0, ptr %1, ptr %2) !dbg !444 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.8, align 8
  %5 = alloca %mem.Allocator, align 8
  %6 = alloca %mem.Allocator, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.3, align 8
  %9 = alloca i64, align 8
  %10 = alloca i1, align 1
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %init.Arg, align 8
  %15 = alloca %init.Arg, align 8
  %16 = alloca %init.Arg, align 8
  %17 = alloca %init.Arg, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !451
  call void @llvm.dbg.value(metadata ptr %3, metadata !452, metadata !DIExpression()), !dbg !451
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !451
  call void @llvm.dbg.value(metadata ptr %4, metadata !453, metadata !DIExpression()), !dbg !451
  call void @mem.create_generic_allocator(ptr %5), !dbg !454
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %5, i64 24, i1 false), !dbg !454
  call void @llvm.dbg.declare(metadata ptr %6, metadata !455, metadata !DIExpression()), !dbg !454
  call void @"array.create:(type,*mem.Allocator)->[]u32"(ptr %7, i64 4, ptr %6), !dbg !456
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !456
  call void @llvm.dbg.declare(metadata ptr %8, metadata !457, metadata !DIExpression()), !dbg !456
  store i64 0, ptr %9, align 8, !dbg !458
  call void @llvm.dbg.declare(metadata ptr %9, metadata !459, metadata !DIExpression()), !dbg !458
  store i1 false, ptr %10, align 1, !dbg !460
  call void @llvm.dbg.declare(metadata ptr %10, metadata !461, metadata !DIExpression()), !dbg !460
  %18 = getelementptr inbounds %string, ptr %3, i32 0, i32 1, !dbg !462
  %19 = load i64, ptr %18, align 8, !dbg !462
  %20 = getelementptr inbounds %string, ptr %3, i32 0, i32 0, !dbg !462
  %21 = load ptr, ptr %20, align 8, !dbg !462
  store ptr %21, ptr %11, align 8, !dbg !462
  store i64 0, ptr %12, align 8, !dbg !462
  br label %block_1, !dbg !462

block_1:                                          ; preds = %block_3, %block_0
  %22 = load i64, ptr %12, align 8, !dbg !462
  %23 = icmp ult i64 %22, %19, !dbg !462
  br i1 %23, label %block_2, label %block_4, !dbg !462

block_2:                                          ; preds = %block_1
  %24 = load ptr, ptr %11, align 8, !dbg !462
  %25 = call i32 @str.deref(ptr %24), !dbg !462
  store i32 %25, ptr %13, align 4, !dbg !462
  call void @llvm.dbg.declare(metadata ptr %13, metadata !463, metadata !DIExpression()), !dbg !462
  call void @llvm.dbg.declare(metadata ptr %12, metadata !464, metadata !DIExpression()), !dbg !462
  %26 = load i32, ptr %13, align 4, !dbg !465
  %27 = icmp eq i32 %26, 37, !dbg !465
  %28 = getelementptr inbounds %slice.8, ptr %4, i32 0, i32 0, !dbg !465
  %29 = load i64, ptr %28, align 8, !dbg !465
  %30 = load i64, ptr %9, align 8, !dbg !465
  %31 = icmp sgt i64 %29, %30, !dbg !465
  %32 = icmp ne i1 %27, false, !dbg !465
  %33 = icmp ne i1 %31, false, !dbg !465
  %34 = and i1 %32, %33, !dbg !465
  br i1 %34, label %block_5, label %block_6, !dbg !465

block_5:                                          ; preds = %block_2
  store i1 true, ptr %10, align 1, !dbg !466
  br label %block_7, !dbg !466

block_6:                                          ; preds = %block_2
  %35 = load i1, ptr %10, align 1, !dbg !467
  br i1 %35, label %block_8, label %block_9, !dbg !467

block_8:                                          ; preds = %block_6
  %36 = load i64, ptr %9, align 8, !dbg !468
  %37 = getelementptr inbounds %slice.8, ptr %4, i32 0, i32 1, !dbg !468
  %38 = load ptr, ptr %37, align 8, !dbg !468
  %39 = getelementptr %init.Arg, ptr %38, i64 %36, !dbg !468
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %39, i64 16, i1 false), !dbg !468
  call void @llvm.dbg.declare(metadata ptr %14, metadata !469, metadata !DIExpression()), !dbg !468
  %40 = load i64, ptr %9, align 8, !dbg !470
  %41 = add i64 %40, 1, !dbg !470
  store i64 %41, ptr %9, align 8, !dbg !470
  %42 = load i32, ptr %13, align 4, !dbg !471
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %14, i64 16, i1 false), !dbg !471
  call void @io.print_type_with_formatter(ptr %8, i32 %42, ptr %15), !dbg !471
  store i1 false, ptr %10, align 1, !dbg !472
  br label %block_10, !dbg !472

block_9:                                          ; preds = %block_6
  %43 = load i32, ptr %13, align 4, !dbg !473
  call void @"array.add:(*[]u32,u32)->void"(ptr %8, i32 %43), !dbg !473
  br label %block_10, !dbg !473

block_10:                                         ; preds = %block_9, %block_8
  br label %block_7, !dbg !473

block_7:                                          ; preds = %block_10, %block_5
  br label %block_3, !dbg !473

block_3:                                          ; preds = %block_7
  %44 = load i64, ptr %12, align 8, !dbg !473
  %45 = add i64 %44, 1, !dbg !473
  store i64 %45, ptr %12, align 8, !dbg !473
  %46 = load ptr, ptr %11, align 8, !dbg !473
  %47 = call ptr @str._it_advance(ptr %46, i64 %19, i64 %44), !dbg !473
  store ptr %47, ptr %11, align 8, !dbg !473
  br label %block_1, !dbg !473

block_4:                                          ; preds = %block_1
  %48 = load i1, ptr %10, align 1, !dbg !474
  br i1 %48, label %block_11, label %block_12, !dbg !474

block_11:                                         ; preds = %block_4
  %49 = load i64, ptr %9, align 8, !dbg !475
  %50 = getelementptr inbounds %slice.8, ptr %4, i32 0, i32 1, !dbg !475
  %51 = load ptr, ptr %50, align 8, !dbg !475
  %52 = getelementptr %init.Arg, ptr %51, i64 %49, !dbg !475
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %52, i64 16, i1 false), !dbg !475
  call void @llvm.dbg.declare(metadata ptr %16, metadata !476, metadata !DIExpression()), !dbg !475
  %53 = load i64, ptr %9, align 8, !dbg !477
  %54 = add i64 %53, 1, !dbg !477
  store i64 %54, ptr %9, align 8, !dbg !477
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %16, i64 16, i1 false), !dbg !478
  call void @io.print_type_with_formatter(ptr %8, i32 0, ptr %17), !dbg !478
  store i1 false, ptr %10, align 1, !dbg !479
  br label %block_13, !dbg !479

block_12:                                         ; preds = %block_4
  br label %block_13, !dbg !479

block_13:                                         ; preds = %block_12, %block_11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !480
  ret void, !dbg !480
}

define void @io.vsprint(ptr %0, ptr %1, ptr %2) !dbg !481 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.8, align 8
  %5 = alloca %slice.3, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.7, align 8
  %9 = alloca %slice.7, align 8
  %10 = alloca %string, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !484
  call void @llvm.dbg.value(metadata ptr %3, metadata !485, metadata !DIExpression()), !dbg !484
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !484
  call void @llvm.dbg.value(metadata ptr %4, metadata !486, metadata !DIExpression()), !dbg !484
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !487
  call void @io.__internal_print(ptr %5, ptr %6, ptr %4), !dbg !487
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !487
  call void @llvm.dbg.declare(metadata ptr %7, metadata !488, metadata !DIExpression()), !dbg !487
  call void @io.builder_to_string(ptr %8, ptr %7), !dbg !489
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !489
  call void @llvm.dbg.declare(metadata ptr %9, metadata !490, metadata !DIExpression()), !dbg !489
  call void @"array.free:(*[]u32)->void"(ptr %7), !dbg !491
  %11 = getelementptr inbounds %slice.7, ptr %9, i32 0, i32 1, !dbg !492
  %12 = load ptr, ptr %11, align 8, !dbg !492
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !492
  %14 = getelementptr inbounds %string, ptr %10, i32 0, i32 0, !dbg !492
  store ptr %13, ptr %14, align 8, !dbg !492
  %15 = getelementptr inbounds %slice.7, ptr %9, i32 0, i32 0, !dbg !492
  %16 = load i64, ptr %15, align 8, !dbg !492
  %17 = getelementptr inbounds %string, ptr %10, i32 0, i32 1, !dbg !492
  store i64 %16, ptr %17, align 8, !dbg !492
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !492
  ret void, !dbg !492
}

define void @io.sprint(ptr %0, ptr %1, ptr %2) !dbg !493 {
block_0:
  %3 = alloca %string, align 8
  %4 = alloca %slice.8, align 8
  %5 = alloca %slice.3, align 8
  %6 = alloca %string, align 8
  %7 = alloca %slice.3, align 8
  %8 = alloca %slice.7, align 8
  %9 = alloca %slice.7, align 8
  %10 = alloca %string, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !496
  call void @llvm.dbg.value(metadata ptr %3, metadata !497, metadata !DIExpression()), !dbg !496
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !496
  call void @llvm.dbg.value(metadata ptr %4, metadata !498, metadata !DIExpression()), !dbg !496
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !499
  call void @io.__internal_print(ptr %5, ptr %6, ptr %4), !dbg !499
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !499
  call void @llvm.dbg.declare(metadata ptr %7, metadata !500, metadata !DIExpression()), !dbg !499
  call void @io.builder_to_string(ptr %8, ptr %7), !dbg !501
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !501
  call void @llvm.dbg.declare(metadata ptr %9, metadata !502, metadata !DIExpression()), !dbg !501
  call void @"array.free:(*[]u32)->void"(ptr %7), !dbg !503
  %11 = getelementptr inbounds %slice.7, ptr %9, i32 0, i32 1, !dbg !504
  %12 = load ptr, ptr %11, align 8, !dbg !504
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !504
  %14 = getelementptr inbounds %string, ptr %10, i32 0, i32 0, !dbg !504
  store ptr %13, ptr %14, align 8, !dbg !504
  %15 = getelementptr inbounds %slice.7, ptr %9, i32 0, i32 0, !dbg !504
  %16 = load i64, ptr %15, align 8, !dbg !504
  %17 = getelementptr inbounds %string, ptr %10, i32 0, i32 1, !dbg !504
  store i64 %16, ptr %17, align 8, !dbg !504
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !504
  ret void, !dbg !504
}

define void @io.print(ptr %0, ptr %1) !dbg !505 {
block_0:
  %2 = alloca %string, align 8
  %3 = alloca %slice.8, align 8
  %4 = alloca %slice.3, align 8
  %5 = alloca %string, align 8
  %6 = alloca %slice.3, align 8
  %7 = alloca %slice.7, align 8
  %8 = alloca %slice.7, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !508
  call void @llvm.dbg.value(metadata ptr %2, metadata !509, metadata !DIExpression()), !dbg !508
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !508
  call void @llvm.dbg.value(metadata ptr %3, metadata !510, metadata !DIExpression()), !dbg !508
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !511
  call void @io.__internal_print(ptr %4, ptr %5, ptr %3), !dbg !511
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !511
  call void @llvm.dbg.declare(metadata ptr %6, metadata !512, metadata !DIExpression()), !dbg !511
  call void @io.builder_to_string(ptr %7, ptr %6), !dbg !513
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !513
  call void @llvm.dbg.declare(metadata ptr %8, metadata !514, metadata !DIExpression()), !dbg !513
  %9 = getelementptr inbounds %slice.7, ptr %8, i32 0, i32 1, !dbg !515
  %10 = load ptr, ptr %9, align 8, !dbg !515
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !515
  %12 = getelementptr inbounds %slice.7, ptr %8, i32 0, i32 0, !dbg !515
  %13 = load i64, ptr %12, align 8, !dbg !515
  %14 = trunc i64 %13 to i32, !dbg !515
  call void @os.print(ptr %11, i32 %14), !dbg !515
  call void @"array.free:(*[]u32)->void"(ptr %6), !dbg !516
  call void @"array.free:(*[]u8)->void"(ptr %8), !dbg !517
  ret void, !dbg !518
}

define void @io.println(ptr %0, ptr %1) !dbg !519 {
block_0:
  %2 = alloca %string, align 8
  %3 = alloca %slice.8, align 8
  %4 = alloca %slice.3, align 8
  %5 = alloca %string, align 8
  %6 = alloca %slice.3, align 8
  %7 = alloca %slice.7, align 8
  %8 = alloca %slice.7, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !520
  call void @llvm.dbg.value(metadata ptr %2, metadata !521, metadata !DIExpression()), !dbg !520
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !520
  call void @llvm.dbg.value(metadata ptr %3, metadata !522, metadata !DIExpression()), !dbg !520
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !523
  call void @io.__internal_print(ptr %4, ptr %5, ptr %3), !dbg !523
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !523
  call void @llvm.dbg.declare(metadata ptr %6, metadata !524, metadata !DIExpression()), !dbg !523
  call void @"array.add:(*[]u32,u32)->void"(ptr %6, i32 10), !dbg !525
  call void @io.builder_to_string(ptr %7, ptr %6), !dbg !526
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !526
  call void @llvm.dbg.declare(metadata ptr %8, metadata !527, metadata !DIExpression()), !dbg !526
  %9 = getelementptr inbounds %slice.7, ptr %8, i32 0, i32 1, !dbg !528
  %10 = load ptr, ptr %9, align 8, !dbg !528
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !528
  %12 = getelementptr inbounds %slice.7, ptr %8, i32 0, i32 0, !dbg !528
  %13 = load i64, ptr %12, align 8, !dbg !528
  %14 = trunc i64 %13 to i32, !dbg !528
  call void @os.print(ptr %11, i32 %14), !dbg !528
  call void @"array.free:(*[]u32)->void"(ptr %6), !dbg !529
  call void @"array.free:(*[]u8)->void"(ptr %8), !dbg !530
  ret void, !dbg !531
}

define void @io.readln(ptr %0, ptr %1, i32 %2) !dbg !532 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  %8 = alloca %string, align 8
  store ptr %1, ptr %3, align 8, !dbg !535
  call void @llvm.dbg.value(metadata ptr %3, metadata !536, metadata !DIExpression()), !dbg !535
  store i32 %2, ptr %4, align 4, !dbg !535
  call void @llvm.dbg.value(metadata ptr %4, metadata !537, metadata !DIExpression()), !dbg !535
  %9 = load ptr, ptr %3, align 8, !dbg !538
  %10 = getelementptr inbounds %mem.Allocator, ptr %9, i32 0, i32 0, !dbg !538
  %11 = load ptr, ptr %10, align 8, !dbg !538
  %12 = load i32, ptr %4, align 4, !dbg !538
  %13 = zext i32 %12 to i64, !dbg !538
  %14 = load ptr, ptr %3, align 8, !dbg !538
  %15 = call ptr %11(i64 %13, ptr %14), !dbg !538
  store ptr %15, ptr %5, align 8, !dbg !538
  call void @llvm.dbg.declare(metadata ptr %5, metadata !539, metadata !DIExpression()), !dbg !538
  %16 = load ptr, ptr %5, align 8, !dbg !540
  %17 = icmp eq ptr %16, null, !dbg !540
  br i1 %17, label %block_1, label %block_2, !dbg !540

block_1:                                          ; preds = %block_0
  %18 = alloca %string, align 8, !dbg !541
  %String = getelementptr inbounds %string, ptr %18, i32 0, i32 0, !dbg !541
  %Size = getelementptr inbounds %string, ptr %18, i32 0, i32 1, !dbg !541
  store ptr @17, ptr %String, align 8, !dbg !541
  store i64 0, ptr %Size, align 8, !dbg !541
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %18, i64 16, i1 false), !dbg !541
  ret void, !dbg !541

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !541

block_3:                                          ; preds = %block_2
  %19 = load ptr, ptr %5, align 8, !dbg !542
  store ptr %19, ptr %6, align 8, !dbg !542
  call void @llvm.dbg.declare(metadata ptr %6, metadata !543, metadata !DIExpression()), !dbg !542
  %20 = load ptr, ptr %6, align 8, !dbg !544
  %21 = load i32, ptr %4, align 4, !dbg !544
  %22 = call i32 @os.read_stdin_line(ptr %20, i32 %21), !dbg !544
  store i32 %22, ptr %7, align 4, !dbg !544
  call void @llvm.dbg.declare(metadata ptr %7, metadata !545, metadata !DIExpression()), !dbg !544
  %23 = load i32, ptr %7, align 4, !dbg !546
  %24 = icmp eq i32 %23, 0, !dbg !546
  br i1 %24, label %block_4, label %block_5, !dbg !546

block_4:                                          ; preds = %block_3
  %25 = alloca %string, align 8, !dbg !547
  %String1 = getelementptr inbounds %string, ptr %25, i32 0, i32 0, !dbg !547
  %Size2 = getelementptr inbounds %string, ptr %25, i32 0, i32 1, !dbg !547
  store ptr @18, ptr %String1, align 8, !dbg !547
  store i64 0, ptr %Size2, align 8, !dbg !547
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %25, i64 16, i1 false), !dbg !547
  ret void, !dbg !547

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !547

block_6:                                          ; preds = %block_5
  call void @llvm.memset.p0.i64(ptr align 8 %8, i8 0, i64 16, i1 false), !dbg !548
  call void @llvm.dbg.declare(metadata ptr %8, metadata !549, metadata !DIExpression()), !dbg !548
  %26 = getelementptr inbounds %string, ptr %8, i32 0, i32 0, !dbg !550
  %27 = load ptr, ptr %6, align 8, !dbg !550
  store ptr %27, ptr %26, align 8, !dbg !550
  %28 = getelementptr inbounds %string, ptr %8, i32 0, i32 1, !dbg !551
  %29 = load i32, ptr %7, align 4, !dbg !551
  %30 = zext i32 %29 to i64, !dbg !551
  store i64 %30, ptr %28, align 8, !dbg !551
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !552
  ret void, !dbg !552
}

define i32 @io.get_next(ptr %0) !dbg !553 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store ptr %0, ptr %1, align 8, !dbg !556
  call void @llvm.dbg.value(metadata ptr %1, metadata !557, metadata !DIExpression()), !dbg !556
  %4 = load ptr, ptr %1, align 8, !dbg !558
  store ptr %4, ptr %2, align 8, !dbg !558
  call void @llvm.dbg.declare(metadata ptr %2, metadata !559, metadata !DIExpression()), !dbg !558
  %5 = load ptr, ptr %2, align 8, !dbg !560
  %6 = load i8, ptr %5, align 1, !dbg !560
  %7 = zext i8 %6 to i32, !dbg !560
  store i32 %7, ptr %3, align 4, !dbg !560
  call void @llvm.dbg.declare(metadata ptr %3, metadata !561, metadata !DIExpression()), !dbg !560
  br label %block_1, !dbg !562

block_1:                                          ; preds = %block_6, %block_0
  br label %block_2, !dbg !562

block_2:                                          ; preds = %block_1
  %8 = load ptr, ptr %2, align 8, !dbg !563
  %9 = load i8, ptr %8, align 1, !dbg !563
  %10 = and i8 %9, -128, !dbg !563
  %11 = icmp ne i8 %10, 0, !dbg !563
  br i1 %11, label %block_4, label %block_5, !dbg !563

block_4:                                          ; preds = %block_2
  %12 = load ptr, ptr %2, align 8, !dbg !564
  %13 = getelementptr i8, ptr %12, i64 1, !dbg !564
  store ptr %13, ptr %2, align 8, !dbg !564
  %14 = load i32, ptr %3, align 4, !dbg !565
  %15 = shl i32 %14, 8, !dbg !565
  %16 = load ptr, ptr %2, align 8, !dbg !565
  %17 = load i8, ptr %16, align 1, !dbg !565
  %18 = zext i8 %17 to i32, !dbg !565
  %19 = or i32 %15, %18, !dbg !565
  store i32 %19, ptr %3, align 4, !dbg !565
  br label %block_6, !dbg !565

block_5:                                          ; preds = %block_2
  %20 = load i32, ptr %3, align 4, !dbg !566
  ret i32 %20, !dbg !566

block_6:                                          ; preds = %block_4
  br label %block_1, !dbg !566

block_3:                                          ; No predecessors!
  %21 = load i32, ptr %3, align 4, !dbg !567
  ret i32 %21, !dbg !567
}

define void @"io.format_float:(type,*[]u32,f32,i32)->void"(i64 %0, ptr %1, float %2, i32 %3) !dbg !568 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca float, align 4
  %12 = alloca i1, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i64 %0, ptr %4, align 8, !dbg !572
  call void @llvm.dbg.value(metadata ptr %4, metadata !573, metadata !DIExpression()), !dbg !572
  store ptr %1, ptr %5, align 8, !dbg !572
  call void @llvm.dbg.value(metadata ptr %5, metadata !574, metadata !DIExpression()), !dbg !572
  store float %2, ptr %6, align 4, !dbg !572
  call void @llvm.dbg.value(metadata ptr %6, metadata !575, metadata !DIExpression()), !dbg !572
  store i32 %3, ptr %7, align 4, !dbg !572
  call void @llvm.dbg.value(metadata ptr %7, metadata !576, metadata !DIExpression()), !dbg !572
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !577
  call void @llvm.dbg.declare(metadata ptr %9, metadata !578, metadata !DIExpression()), !dbg !577
  store i64 0, ptr %10, align 8, !dbg !579
  call void @llvm.dbg.declare(metadata ptr %10, metadata !580, metadata !DIExpression()), !dbg !579
  %16 = load float, ptr %6, align 4, !dbg !581
  store float %16, ptr %11, align 4, !dbg !581
  call void @llvm.dbg.declare(metadata ptr %11, metadata !582, metadata !DIExpression()), !dbg !581
  %17 = load i64, ptr %4, align 8, !dbg !583
  %18 = icmp ne i64 %17, 10, !dbg !583
  %19 = load i64, ptr %4, align 8, !dbg !583
  %20 = icmp ne i64 %19, 11, !dbg !583
  %21 = icmp ne i1 %18, false, !dbg !583
  %22 = icmp ne i1 %20, false, !dbg !583
  %23 = and i1 %21, %22, !dbg !583
  br i1 %23, label %block_1, label %block_2, !dbg !583

block_1:                                          ; preds = %block_0
  ret void, !dbg !584

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !584

block_3:                                          ; preds = %block_2
  %24 = load float, ptr %11, align 4, !dbg !585
  %25 = fcmp oeq float %24, 0.000000e+00, !dbg !585
  br i1 %25, label %block_4, label %block_5, !dbg !585

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !586
  call void @"array.add:(*[]u32,u32)->void"(ptr %26, i32 48), !dbg !586
  ret void, !dbg !587

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !587

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !588
  call void @llvm.dbg.declare(metadata ptr %12, metadata !589, metadata !DIExpression()), !dbg !588
  %27 = load float, ptr %11, align 4, !dbg !590
  %28 = fcmp olt float %27, 0.000000e+00, !dbg !590
  br i1 %28, label %block_7, label %block_8, !dbg !590

block_7:                                          ; preds = %block_6
  %29 = load float, ptr %11, align 4, !dbg !591
  %30 = fsub float 0.000000e+00, %29, !dbg !591
  store float %30, ptr %11, align 4, !dbg !591
  store i1 true, ptr %12, align 1, !dbg !592
  br label %block_9, !dbg !592

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !592

block_9:                                          ; preds = %block_8, %block_7
  %31 = load float, ptr %11, align 4, !dbg !593
  %32 = fadd float %31, 0x3F747AE140000000, !dbg !593
  store float %32, ptr %11, align 4, !dbg !593
  %33 = load float, ptr %11, align 4, !dbg !594
  %34 = fptosi float %33 to i32, !dbg !594
  store i32 %34, ptr %13, align 4, !dbg !594
  call void @llvm.dbg.declare(metadata ptr %13, metadata !595, metadata !DIExpression()), !dbg !594
  %35 = load float, ptr %11, align 4, !dbg !596
  %36 = load i32, ptr %7, align 4, !dbg !596
  %37 = sitofp i32 %36 to float, !dbg !596
  %38 = fmul float %35, %37, !dbg !596
  %39 = fptosi float %38 to i32, !dbg !596
  %40 = load i32, ptr %7, align 4, !dbg !596
  %41 = srem i32 %39, %40, !dbg !596
  store i32 %41, ptr %14, align 4, !dbg !596
  call void @llvm.dbg.declare(metadata ptr %14, metadata !597, metadata !DIExpression()), !dbg !596
  %42 = load i32, ptr %14, align 4, !dbg !598
  %43 = icmp eq i32 %42, 0, !dbg !598
  br i1 %43, label %block_10, label %block_11, !dbg !598

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !599
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !599
  store i32 48, ptr %45, align 4, !dbg !599
  %46 = load i64, ptr %10, align 8, !dbg !600
  %47 = add i64 %46, 1, !dbg !600
  store i64 %47, ptr %10, align 8, !dbg !600
  br label %block_12, !dbg !600

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !601

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !601
  %49 = icmp sgt i32 %48, 0, !dbg !601
  br i1 %49, label %block_14, label %block_15, !dbg !601

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !602
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !602
  %52 = load i32, ptr %14, align 4, !dbg !602
  %53 = srem i32 %52, 10, !dbg !602
  %54 = trunc i32 %53 to i8, !dbg !602
  %55 = zext i8 %54 to i32, !dbg !602
  %56 = add i32 48, %55, !dbg !602
  store i32 %56, ptr %51, align 4, !dbg !602
  %57 = load i64, ptr %10, align 8, !dbg !603
  %58 = add i64 %57, 1, !dbg !603
  store i64 %58, ptr %10, align 8, !dbg !603
  %59 = load i32, ptr %14, align 4, !dbg !604
  %60 = sdiv i32 %59, 10, !dbg !604
  store i32 %60, ptr %14, align 4, !dbg !604
  br label %block_13, !dbg !604

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !604

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !605
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !605
  store i32 46, ptr %62, align 4, !dbg !605
  %63 = load i64, ptr %10, align 8, !dbg !606
  %64 = add i64 %63, 1, !dbg !606
  store i64 %64, ptr %10, align 8, !dbg !606
  %65 = load i32, ptr %13, align 4, !dbg !607
  %66 = icmp eq i32 %65, 0, !dbg !607
  br i1 %66, label %block_16, label %block_17, !dbg !607

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !608
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !608
  store i32 48, ptr %68, align 4, !dbg !608
  %69 = load i64, ptr %10, align 8, !dbg !609
  %70 = add i64 %69, 1, !dbg !609
  store i64 %70, ptr %10, align 8, !dbg !609
  br label %block_18, !dbg !609

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !610

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !610
  %72 = icmp sgt i32 %71, 0, !dbg !610
  br i1 %72, label %block_20, label %block_21, !dbg !610

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !611
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !611
  %75 = load i32, ptr %13, align 4, !dbg !611
  %76 = srem i32 %75, 10, !dbg !611
  %77 = add i32 48, %76, !dbg !611
  store i32 %77, ptr %74, align 4, !dbg !611
  %78 = load i64, ptr %10, align 8, !dbg !612
  %79 = add i64 %78, 1, !dbg !612
  store i64 %79, ptr %10, align 8, !dbg !612
  %80 = load i32, ptr %13, align 4, !dbg !613
  %81 = sdiv i32 %80, 10, !dbg !613
  store i32 %81, ptr %13, align 4, !dbg !613
  br label %block_19, !dbg !613

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !613

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !614
  br i1 %82, label %block_22, label %block_23, !dbg !614

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !615
  call void @"array.add:(*[]u32,u32)->void"(ptr %83, i32 45), !dbg !615
  br label %block_24, !dbg !615

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !615

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !616
  store i64 0, ptr %15, align 8, !dbg !616
  br label %block_25, !dbg !616

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !616
  %86 = icmp ult i64 %85, %84, !dbg !616
  br i1 %86, label %block_26, label %block_28, !dbg !616

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !617, metadata !DIExpression()), !dbg !616
  %87 = load ptr, ptr %5, align 8, !dbg !618
  %88 = load i64, ptr %10, align 8, !dbg !618
  %89 = load i64, ptr %15, align 8, !dbg !618
  %90 = sub i64 %88, %89, !dbg !618
  %91 = sub i64 %90, 1, !dbg !618
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !618
  %93 = load i32, ptr %92, align 4, !dbg !618
  call void @"array.add:(*[]u32,u32)->void"(ptr %87, i32 %93), !dbg !618
  br label %block_27, !dbg !618

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !618
  %95 = add i64 %94, 1, !dbg !618
  store i64 %95, ptr %15, align 8, !dbg !618
  br label %block_25, !dbg !618

block_28:                                         ; preds = %block_25
  ret void, !dbg !619
}

define void @"io.format_float:(type,*[]u32,f64,i32)->void"(i64 %0, ptr %1, double %2, i32 %3) !dbg !620 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca double, align 8
  %12 = alloca i1, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i64 %0, ptr %4, align 8, !dbg !623
  call void @llvm.dbg.value(metadata ptr %4, metadata !624, metadata !DIExpression()), !dbg !623
  store ptr %1, ptr %5, align 8, !dbg !623
  call void @llvm.dbg.value(metadata ptr %5, metadata !625, metadata !DIExpression()), !dbg !623
  store double %2, ptr %6, align 8, !dbg !623
  call void @llvm.dbg.value(metadata ptr %6, metadata !626, metadata !DIExpression()), !dbg !623
  store i32 %3, ptr %7, align 4, !dbg !623
  call void @llvm.dbg.value(metadata ptr %7, metadata !627, metadata !DIExpression()), !dbg !623
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !628
  call void @llvm.dbg.declare(metadata ptr %9, metadata !629, metadata !DIExpression()), !dbg !628
  store i64 0, ptr %10, align 8, !dbg !630
  call void @llvm.dbg.declare(metadata ptr %10, metadata !631, metadata !DIExpression()), !dbg !630
  %16 = load double, ptr %6, align 8, !dbg !632
  store double %16, ptr %11, align 8, !dbg !632
  call void @llvm.dbg.declare(metadata ptr %11, metadata !633, metadata !DIExpression()), !dbg !632
  %17 = load i64, ptr %4, align 8, !dbg !634
  %18 = icmp ne i64 %17, 10, !dbg !634
  %19 = load i64, ptr %4, align 8, !dbg !634
  %20 = icmp ne i64 %19, 11, !dbg !634
  %21 = icmp ne i1 %18, false, !dbg !634
  %22 = icmp ne i1 %20, false, !dbg !634
  %23 = and i1 %21, %22, !dbg !634
  br i1 %23, label %block_1, label %block_2, !dbg !634

block_1:                                          ; preds = %block_0
  ret void, !dbg !635

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !635

block_3:                                          ; preds = %block_2
  %24 = load double, ptr %11, align 8, !dbg !636
  %25 = fcmp oeq double %24, 0.000000e+00, !dbg !636
  br i1 %25, label %block_4, label %block_5, !dbg !636

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !637
  call void @"array.add:(*[]u32,u32)->void"(ptr %26, i32 48), !dbg !637
  ret void, !dbg !638

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !638

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !639
  call void @llvm.dbg.declare(metadata ptr %12, metadata !640, metadata !DIExpression()), !dbg !639
  %27 = load double, ptr %11, align 8, !dbg !641
  %28 = fcmp olt double %27, 0.000000e+00, !dbg !641
  br i1 %28, label %block_7, label %block_8, !dbg !641

block_7:                                          ; preds = %block_6
  %29 = load double, ptr %11, align 8, !dbg !642
  %30 = fsub double 0.000000e+00, %29, !dbg !642
  store double %30, ptr %11, align 8, !dbg !642
  store i1 true, ptr %12, align 1, !dbg !643
  br label %block_9, !dbg !643

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !643

block_9:                                          ; preds = %block_8, %block_7
  %31 = load double, ptr %11, align 8, !dbg !644
  %32 = fadd double %31, 0x3F747AE140000000, !dbg !644
  store double %32, ptr %11, align 8, !dbg !644
  %33 = load double, ptr %11, align 8, !dbg !645
  %34 = fptosi double %33 to i32, !dbg !645
  store i32 %34, ptr %13, align 4, !dbg !645
  call void @llvm.dbg.declare(metadata ptr %13, metadata !646, metadata !DIExpression()), !dbg !645
  %35 = load double, ptr %11, align 8, !dbg !647
  %36 = load i32, ptr %7, align 4, !dbg !647
  %37 = sitofp i32 %36 to double, !dbg !647
  %38 = fmul double %35, %37, !dbg !647
  %39 = fptosi double %38 to i32, !dbg !647
  %40 = load i32, ptr %7, align 4, !dbg !647
  %41 = srem i32 %39, %40, !dbg !647
  store i32 %41, ptr %14, align 4, !dbg !647
  call void @llvm.dbg.declare(metadata ptr %14, metadata !648, metadata !DIExpression()), !dbg !647
  %42 = load i32, ptr %14, align 4, !dbg !649
  %43 = icmp eq i32 %42, 0, !dbg !649
  br i1 %43, label %block_10, label %block_11, !dbg !649

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !650
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !650
  store i32 48, ptr %45, align 4, !dbg !650
  %46 = load i64, ptr %10, align 8, !dbg !651
  %47 = add i64 %46, 1, !dbg !651
  store i64 %47, ptr %10, align 8, !dbg !651
  br label %block_12, !dbg !651

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !652

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !652
  %49 = icmp sgt i32 %48, 0, !dbg !652
  br i1 %49, label %block_14, label %block_15, !dbg !652

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !653
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !653
  %52 = load i32, ptr %14, align 4, !dbg !653
  %53 = srem i32 %52, 10, !dbg !653
  %54 = trunc i32 %53 to i8, !dbg !653
  %55 = zext i8 %54 to i32, !dbg !653
  %56 = add i32 48, %55, !dbg !653
  store i32 %56, ptr %51, align 4, !dbg !653
  %57 = load i64, ptr %10, align 8, !dbg !654
  %58 = add i64 %57, 1, !dbg !654
  store i64 %58, ptr %10, align 8, !dbg !654
  %59 = load i32, ptr %14, align 4, !dbg !655
  %60 = sdiv i32 %59, 10, !dbg !655
  store i32 %60, ptr %14, align 4, !dbg !655
  br label %block_13, !dbg !655

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !655

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !656
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !656
  store i32 46, ptr %62, align 4, !dbg !656
  %63 = load i64, ptr %10, align 8, !dbg !657
  %64 = add i64 %63, 1, !dbg !657
  store i64 %64, ptr %10, align 8, !dbg !657
  %65 = load i32, ptr %13, align 4, !dbg !658
  %66 = icmp eq i32 %65, 0, !dbg !658
  br i1 %66, label %block_16, label %block_17, !dbg !658

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !659
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !659
  store i32 48, ptr %68, align 4, !dbg !659
  %69 = load i64, ptr %10, align 8, !dbg !660
  %70 = add i64 %69, 1, !dbg !660
  store i64 %70, ptr %10, align 8, !dbg !660
  br label %block_18, !dbg !660

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !661

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !661
  %72 = icmp sgt i32 %71, 0, !dbg !661
  br i1 %72, label %block_20, label %block_21, !dbg !661

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !662
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !662
  %75 = load i32, ptr %13, align 4, !dbg !662
  %76 = srem i32 %75, 10, !dbg !662
  %77 = add i32 48, %76, !dbg !662
  store i32 %77, ptr %74, align 4, !dbg !662
  %78 = load i64, ptr %10, align 8, !dbg !663
  %79 = add i64 %78, 1, !dbg !663
  store i64 %79, ptr %10, align 8, !dbg !663
  %80 = load i32, ptr %13, align 4, !dbg !664
  %81 = sdiv i32 %80, 10, !dbg !664
  store i32 %81, ptr %13, align 4, !dbg !664
  br label %block_19, !dbg !664

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !664

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !665
  br i1 %82, label %block_22, label %block_23, !dbg !665

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !666
  call void @"array.add:(*[]u32,u32)->void"(ptr %83, i32 45), !dbg !666
  br label %block_24, !dbg !666

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !666

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !667
  store i64 0, ptr %15, align 8, !dbg !667
  br label %block_25, !dbg !667

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !667
  %86 = icmp ult i64 %85, %84, !dbg !667
  br i1 %86, label %block_26, label %block_28, !dbg !667

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !668, metadata !DIExpression()), !dbg !667
  %87 = load ptr, ptr %5, align 8, !dbg !669
  %88 = load i64, ptr %10, align 8, !dbg !669
  %89 = load i64, ptr %15, align 8, !dbg !669
  %90 = sub i64 %88, %89, !dbg !669
  %91 = sub i64 %90, 1, !dbg !669
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !669
  %93 = load i32, ptr %92, align 4, !dbg !669
  call void @"array.add:(*[]u32,u32)->void"(ptr %87, i32 %93), !dbg !669
  br label %block_27, !dbg !669

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !669
  %95 = add i64 %94, 1, !dbg !669
  store i64 %95, ptr %15, align 8, !dbg !669
  br label %block_25, !dbg !669

block_28:                                         ; preds = %block_25
  ret void, !dbg !670
}

declare ptr @mem.generic_alloc(i64, ptr)

declare void @mem.generic_free(ptr, ptr)

declare void @mem.create_generic_allocator(ptr)

declare ptr @mem.arena_alloc(i64, ptr)

declare void @mem.no_free(ptr, ptr)

declare void @mem.create_scratch(ptr, i64)

declare void @mem.destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare void @"mem.make_slice:(type,int,*mem.Allocator)->[][]main.Tile"(ptr, i64, i64, ptr)

declare void @"mem.make_slice:(type,int,*mem.Allocator)->[]main.Tile"(ptr, i64, i64, ptr)

declare void @"mem.make_slice:(type,int,*mem.Allocator)->[]u8"(ptr, i64, i64, ptr)

declare i64 @str.to_int(ptr)

declare void @str.create(ptr, ptr)

declare void @str.append(ptr, ptr)

declare void @str.append_u32(ptr, i32)

declare void @str.append_u8(ptr, i8)

declare void @str.from_builder(ptr, ptr, ptr)

declare void @str.substr(ptr, ptr, i64, i64)

declare i64 @str.get_codepoint_size(ptr)

declare ptr @str.advance(ptr)

declare ptr @str._it_advance(ptr, i64, i64)

declare i32 @str.deref(ptr)

declare i32 @str.index(ptr, i64)

declare void @"array.add:(*[]u32,u32)->void"(ptr, i32)

declare void @"array.create:(type,*mem.Allocator)->[]u8"(ptr, i64, ptr)

declare void @"array.add:(*[]u8,u8)->void"(ptr, i8)

declare void @"array.create:(type,*mem.Allocator)->[]u32"(ptr, i64, ptr)

declare void @"array.free:(*[]u32)->void"(ptr)

declare void @"array.free:(*[]u8)->void"(ptr)

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!77, !78}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!2 = !{!3, !15, !36, !45, !50, !54, !65, !71}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.TypeKind", scope: !1, file: !1, size: 64, align: 64, elements: !4)
!4 = !{!5, !6, !7, !8, !9, !10, !11, !12, !13, !14}
!5 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!6 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!7 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!8 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!9 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!11 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!12 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!13 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.BasicKind", scope: !1, file: !1, size: 64, align: 64, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!17 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.BasicFlag", scope: !1, file: !1, size: 32, align: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44}
!38 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.StructFlag", scope: !1, file: !1, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init.VectorKind", scope: !1, file: !1, size: 64, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compile.CompileFlag", scope: !1, file: !1, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64}
!56 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "SharedLib", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "CrossAndroid", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "NoLink", value: 256, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compile.Arch", scope: !1, file: !1, size: 32, align: 32, elements: !66)
!66 = !{!67, !68, !69, !70}
!67 = !DIEnumerator(name: "x86_64", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "x86", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "Arm32", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "Arm64", value: 4, isUnsigned: true)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "main.Tile", scope: !1, file: !1, size: 64, align: 64, elements: !72)
!72 = !{!73, !74, !75, !76}
!73 = !DIEnumerator(name: "Wall", value: 0, isUnsigned: true)
!74 = !DIEnumerator(name: "Empty", value: 1, isUnsigned: true)
!75 = !DIEnumerator(name: "Start", value: 2, isUnsigned: true)
!76 = !DIEnumerator(name: "End", value: 3, isUnsigned: true)
!77 = !{i32 2, !"CodeView", i32 1}
!78 = !{i32 2, !"Debug Info Version", i32 3}
!79 = distinct !DISubprogram(name: "push_string", linkageName: "io.push_string", scope: !1, file: !1, line: 9, type: !80, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !82, !90}
!82 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !83, size: 64, align: 64, dwarfAddressSpace: 0)
!83 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !84)
!84 = !{!85, !87}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !86, size: 64, align: 64)
!86 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !88, size: 64, align: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!89 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!90 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !1, file: !1, size: 128, elements: !91)
!91 = !{!92, !95}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !93, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!94 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !86, size: 64, align: 64, offset: 64)
!96 = !{}
!97 = !DILocation(line: 9, scope: !79)
!98 = !DILocalVariable(name: "b", scope: !79, file: !1, line: 9, type: !82)
!99 = !DILocalVariable(name: "to_push", arg: 1, scope: !79, file: !1, line: 9, type: !90)
!100 = !DILocation(line: 10, scope: !79)
!101 = !DILocalVariable(name: "c", scope: !79, file: !1, line: 10, type: !89)
!102 = !DILocalVariable(name: "i", scope: !79, file: !1, line: 10, type: !86)
!103 = !DILocation(line: 11, scope: !79)
!104 = !DILocation(line: 13, scope: !79)
!105 = distinct !DISubprogram(name: "format_uint", linkageName: "io.format_uint", scope: !1, file: !1, line: 15, type: !106, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!106 = !DISubroutineType(types: !107)
!107 = !{null, !82, !108}
!108 = !DIBasicType(name: "uint", size: 64, encoding: DW_ATE_unsigned)
!109 = !DILocation(line: 15, scope: !105)
!110 = !DILocalVariable(name: "b", scope: !105, file: !1, line: 15, type: !82)
!111 = !DILocalVariable(name: "num_in", arg: 1, scope: !105, file: !1, line: 15, type: !108)
!112 = !DILocation(line: 16, scope: !105)
!113 = !DILocalVariable(name: "temp", scope: !105, file: !1, line: 16, type: !114)
!114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8192, align: 32, elements: !115)
!115 = !{!116}
!116 = !DISubrange(count: 256, lowerBound: 0)
!117 = !DILocation(line: 17, scope: !105)
!118 = !DILocalVariable(name: "num", scope: !105, file: !1, line: 17, type: !108)
!119 = !DILocation(line: 18, scope: !105)
!120 = !DILocation(line: 19, scope: !105)
!121 = !DILocation(line: 20, scope: !105)
!122 = !DILocation(line: 23, scope: !105)
!123 = !DILocalVariable(name: "count", scope: !105, file: !1, line: 23, type: !86)
!124 = !DILocation(line: 24, scope: !105)
!125 = !DILocation(line: 25, scope: !105)
!126 = !DILocalVariable(name: "digit", scope: !105, file: !1, line: 25, type: !108)
!127 = !DILocation(line: 26, scope: !105)
!128 = !DILocation(line: 27, scope: !105)
!129 = !DILocalVariable(name: "c", scope: !105, file: !1, line: 27, type: !108)
!130 = !DILocation(line: 28, scope: !105)
!131 = !DILocation(line: 29, scope: !105)
!132 = !DILocation(line: 32, scope: !105)
!133 = !DILocalVariable(name: "i", scope: !105, file: !1, line: 32, type: !86)
!134 = !DILocation(line: 33, scope: !105)
!135 = !DILocation(line: 35, scope: !105)
!136 = distinct !DISubprogram(name: "format_int", linkageName: "io.format_int", scope: !1, file: !1, line: 37, type: !137, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!137 = !DISubroutineType(types: !138)
!138 = !{null, !82, !86}
!139 = !DILocation(line: 37, scope: !136)
!140 = !DILocalVariable(name: "b", scope: !136, file: !1, line: 37, type: !82)
!141 = !DILocalVariable(name: "num_in", arg: 1, scope: !136, file: !1, line: 37, type: !86)
!142 = !DILocation(line: 38, scope: !136)
!143 = !DILocalVariable(name: "temp", scope: !136, file: !1, line: 38, type: !114)
!144 = !DILocation(line: 39, scope: !136)
!145 = !DILocalVariable(name: "num", scope: !136, file: !1, line: 39, type: !86)
!146 = !DILocation(line: 40, scope: !136)
!147 = !DILocation(line: 41, scope: !136)
!148 = !DILocation(line: 42, scope: !136)
!149 = !DILocation(line: 45, scope: !136)
!150 = !DILocalVariable(name: "is_neg", scope: !136, file: !1, line: 45, type: !151)
!151 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!152 = !DILocation(line: 46, scope: !136)
!153 = !DILocation(line: 47, scope: !136)
!154 = !DILocation(line: 48, scope: !136)
!155 = !DILocation(line: 51, scope: !136)
!156 = !DILocalVariable(name: "count", scope: !136, file: !1, line: 51, type: !86)
!157 = !DILocation(line: 52, scope: !136)
!158 = !DILocation(line: 53, scope: !136)
!159 = !DILocalVariable(name: "digit", scope: !136, file: !1, line: 53, type: !86)
!160 = !DILocation(line: 54, scope: !136)
!161 = !DILocation(line: 55, scope: !136)
!162 = !DILocalVariable(name: "c", scope: !136, file: !1, line: 55, type: !89)
!163 = !DILocation(line: 56, scope: !136)
!164 = !DILocation(line: 57, scope: !136)
!165 = !DILocation(line: 60, scope: !136)
!166 = !DILocation(line: 62, scope: !136)
!167 = !DILocalVariable(name: "i", scope: !136, file: !1, line: 62, type: !86)
!168 = !DILocation(line: 63, scope: !136)
!169 = !DILocation(line: 65, scope: !136)
!170 = distinct !DISubprogram(name: "print_typetype", linkageName: "io.print_typetype", scope: !1, file: !1, line: 127, type: !171, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !82, !173}
!173 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.TypeInfo", scope: !1, file: !1, size: 384, elements: !174)
!174 = !{!175, !176}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !3, size: 64, align: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !177, size: 320, align: 64, offset: 64)
!177 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.TypeUnion", scope: !1, file: !1, size: 320, elements: !178)
!178 = !{!179, !186, !200, !209, !214, !219, !222, !231, !236}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !1, file: !1, baseType: !180, size: 256, align: 64)
!180 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.BasicType", scope: !1, file: !1, size: 256, elements: !181)
!181 = !{!182, !183, !184, !185}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !15, size: 64, align: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 96)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !90, size: 128, align: 64, offset: 128)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "struct_", scope: !1, file: !1, baseType: !187, size: 320, align: 64)
!187 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.StructType", scope: !1, file: !1, size: 320, elements: !188)
!188 = !{!189, !185, !199}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !1, file: !1, baseType: !190, size: 128, align: 64)
!190 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !191)
!191 = !{!85, !192}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !193, size: 64, align: 64, offset: 64)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*init.StructMember", baseType: !194, size: 64, align: 64, dwarfAddressSpace: 0)
!194 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.StructMember", scope: !1, file: !1, size: 192, elements: !195)
!195 = !{!196, !197}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !90, size: 128, align: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !198, size: 64, align: 64, offset: 128)
!198 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 256)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1, file: !1, baseType: !201, size: 256, align: 64)
!201 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.FunctionType", scope: !1, file: !1, size: 256, elements: !202)
!202 = !{!203, !208}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "returns", scope: !1, file: !1, baseType: !204, size: 128, align: 64)
!204 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !205)
!205 = !{!85, !206}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !207, size: 64, align: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*type", baseType: !198, size: 64, align: 64, dwarfAddressSpace: 0)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "args_t", scope: !1, file: !1, baseType: !204, size: 128, align: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1, file: !1, baseType: !210, size: 128, align: 64)
!210 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.PointerType", scope: !1, file: !1, size: 128, elements: !211)
!211 = !{!212, !213}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "pointee", scope: !1, file: !1, baseType: !198, size: 64, align: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "is_optional", scope: !1, file: !1, baseType: !151, size: 8, align: 8, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1, file: !1, baseType: !215, size: 128, align: 64)
!215 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.ArrayType", scope: !1, file: !1, size: 128, elements: !216)
!216 = !{!217, !218}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !198, size: 64, align: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "member_count", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !1, file: !1, baseType: !220, size: 64, align: 64)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.SliceType", scope: !1, file: !1, size: 64, elements: !221)
!221 = !{!217}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "enum_", scope: !1, file: !1, baseType: !223, size: 320, align: 64)
!223 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.EnumType", scope: !1, file: !1, size: 320, elements: !224)
!224 = !{!196, !225, !230}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "member_names", scope: !1, file: !1, baseType: !226, size: 128, align: 64, offset: 128)
!226 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !227)
!227 = !{!85, !228}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !229, size: 64, align: 64, offset: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*string", baseType: !90, size: 64, align: 64, dwarfAddressSpace: 0)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !198, size: 64, align: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1, file: !1, baseType: !232, size: 128, align: 64)
!232 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.VectorType", scope: !1, file: !1, size: 128, elements: !233)
!233 = !{!234, !235}
!234 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !50, size: 64, align: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1, file: !1, baseType: !237, size: 128, align: 64)
!237 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.GenericType", scope: !1, file: !1, size: 128, elements: !238)
!238 = !{!196}
!239 = !DILocation(line: 127, scope: !170)
!240 = !DILocalVariable(name: "b", scope: !170, file: !1, line: 127, type: !82)
!241 = !DILocalVariable(name: "info", arg: 1, scope: !170, file: !1, line: 127, type: !173)
!242 = !DILocation(line: 128, scope: !170)
!243 = !DILocation(line: 130, scope: !170)
!244 = !DILocation(line: 133, scope: !170)
!245 = !DILocation(line: 136, scope: !170)
!246 = !DILocation(line: 137, scope: !170)
!247 = !DILocalVariable(name: "args", scope: !170, file: !1, line: 137, type: !204)
!248 = !DILocation(line: 138, scope: !170)
!249 = !DILocalVariable(name: "arg", scope: !170, file: !1, line: 138, type: !198)
!250 = !DILocalVariable(name: "i", scope: !170, file: !1, line: 138, type: !86)
!251 = !DILocation(line: 139, scope: !170)
!252 = !DILocation(line: 140, scope: !170)
!253 = !DILocation(line: 141, scope: !170)
!254 = !DILocation(line: 144, scope: !170)
!255 = !DILocation(line: 145, scope: !170)
!256 = !DILocation(line: 146, scope: !170)
!257 = !DILocation(line: 147, scope: !170)
!258 = !DILocalVariable(name: "t", scope: !170, file: !1, line: 147, type: !198)
!259 = !DILocalVariable(name: "i", scope: !170, file: !1, line: 147, type: !86)
!260 = !DILocation(line: 148, scope: !170)
!261 = !DILocation(line: 149, scope: !170)
!262 = !DILocation(line: 150, scope: !170)
!263 = !DILocation(line: 155, scope: !170)
!264 = !DILocation(line: 158, scope: !170)
!265 = !DILocation(line: 159, scope: !170)
!266 = !DILocation(line: 162, scope: !170)
!267 = !DILocation(line: 163, scope: !170)
!268 = !DILocation(line: 166, scope: !170)
!269 = !DILocation(line: 167, scope: !170)
!270 = !DILocation(line: 170, scope: !170)
!271 = !DILocation(line: 173, scope: !170)
!272 = !DILocation(line: 176, scope: !170)
!273 = !DILocation(line: 180, scope: !170)
!274 = distinct !DISubprogram(name: "print_type", linkageName: "io.print_type", scope: !1, file: !1, line: 182, type: !275, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!275 = !DISubroutineType(types: !276)
!276 = !{null, !82, !277}
!277 = !DICompositeType(tag: DW_TAG_structure_type, name: "init.Arg", scope: !1, file: !1, size: 128, elements: !278)
!278 = !{!217, !279}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1, file: !1, baseType: !280, size: 64, align: 64, offset: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!281 = !DILocation(line: 182, scope: !274)
!282 = !DILocalVariable(name: "b", scope: !274, file: !1, line: 182, type: !82)
!283 = !DILocalVariable(name: "arg", arg: 1, scope: !274, file: !1, line: 182, type: !277)
!284 = !DILocation(line: 183, scope: !274)
!285 = !DILocalVariable(name: "t", scope: !274, file: !1, line: 183, type: !173)
!286 = !DILocation(line: 184, scope: !274)
!287 = !DILocation(line: 188, scope: !274)
!288 = !DILocalVariable(name: "basic", scope: !274, file: !1, line: 188, type: !180)
!289 = !DILocation(line: 189, scope: !274)
!290 = !DILocation(line: 190, scope: !274)
!291 = !DILocation(line: 191, scope: !274)
!292 = !DILocation(line: 193, scope: !274)
!293 = !DILocation(line: 196, scope: !274)
!294 = !DILocation(line: 197, scope: !274)
!295 = !DILocalVariable(name: "str", scope: !274, file: !1, line: 197, type: !90)
!296 = !DILocation(line: 198, scope: !274)
!297 = !DILocation(line: 207, scope: !274)
!298 = !DILocation(line: 208, scope: !274)
!299 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 208, type: !108)
!300 = !DILocation(line: 209, scope: !274)
!301 = !DILocation(line: 211, scope: !274)
!302 = !DILocation(line: 212, scope: !274)
!303 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 212, type: !108)
!304 = !DILocation(line: 213, scope: !274)
!305 = !DILocation(line: 215, scope: !274)
!306 = !DILocation(line: 216, scope: !274)
!307 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 216, type: !108)
!308 = !DILocation(line: 217, scope: !274)
!309 = !DILocation(line: 219, scope: !274)
!310 = !DILocation(line: 220, scope: !274)
!311 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 220, type: !108)
!312 = !DILocation(line: 221, scope: !274)
!313 = !DILocation(line: 223, scope: !274)
!314 = !DILocation(line: 224, scope: !274)
!315 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 224, type: !86)
!316 = !DILocation(line: 225, scope: !274)
!317 = !DILocation(line: 227, scope: !274)
!318 = !DILocation(line: 228, scope: !274)
!319 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 228, type: !86)
!320 = !DILocation(line: 229, scope: !274)
!321 = !DILocation(line: 231, scope: !274)
!322 = !DILocation(line: 232, scope: !274)
!323 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 232, type: !86)
!324 = !DILocation(line: 233, scope: !274)
!325 = !DILocation(line: 235, scope: !274)
!326 = !DILocation(line: 236, scope: !274)
!327 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 236, type: !86)
!328 = !DILocation(line: 237, scope: !274)
!329 = !DILocation(line: 239, scope: !274)
!330 = !DILocation(line: 240, scope: !274)
!331 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 240, type: !86)
!332 = !DILocation(line: 241, scope: !274)
!333 = !DILocation(line: 243, scope: !274)
!334 = !DILocation(line: 244, scope: !274)
!335 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 244, type: !108)
!336 = !DILocation(line: 245, scope: !274)
!337 = !DILocation(line: 247, scope: !274)
!338 = !DILocation(line: 248, scope: !274)
!339 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 248, type: !340)
!340 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!341 = !DILocation(line: 249, scope: !274)
!342 = !DILocation(line: 251, scope: !274)
!343 = !DILocation(line: 252, scope: !274)
!344 = !DILocalVariable(name: "num", scope: !274, file: !1, line: 252, type: !345)
!345 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!346 = !DILocation(line: 253, scope: !274)
!347 = !DILocation(line: 255, scope: !274)
!348 = !DILocation(line: 256, scope: !274)
!349 = !DILocalVariable(name: "pt", scope: !274, file: !1, line: 256, type: !198)
!350 = !DILocation(line: 257, scope: !274)
!351 = !DILocalVariable(name: "info", scope: !274, file: !1, line: 257, type: !173)
!352 = !DILocation(line: 258, scope: !274)
!353 = !DILocation(line: 261, scope: !274)
!354 = !DILocation(line: 267, scope: !274)
!355 = !DILocalVariable(name: "st", scope: !274, file: !1, line: 267, type: !187)
!356 = !DILocation(line: 268, scope: !274)
!357 = !DILocation(line: 269, scope: !274)
!358 = !DILocation(line: 270, scope: !274)
!359 = !DILocalVariable(name: "n", scope: !274, file: !1, line: 270, type: !86)
!360 = !DILocation(line: 271, scope: !274)
!361 = !DILocalVariable(name: "m", scope: !274, file: !1, line: 271, type: !194)
!362 = !DILocation(line: 272, scope: !274)
!363 = !DILocation(line: 273, scope: !274)
!364 = !DILocation(line: 274, scope: !274)
!365 = !DILocation(line: 275, scope: !274)
!366 = !DILocalVariable(name: "ptr", scope: !274, file: !1, line: 275, type: !93)
!367 = !DILocation(line: 276, scope: !274)
!368 = !DILocalVariable(name: "offset", scope: !274, file: !1, line: 276, type: !86)
!369 = !DILocation(line: 277, scope: !274)
!370 = !DILocalVariable(name: "mem_arg", scope: !274, file: !1, line: 277, type: !277)
!371 = !DILocation(line: 281, scope: !274)
!372 = !DILocation(line: 283, scope: !274)
!373 = !DILocation(line: 284, scope: !274)
!374 = !DILocation(line: 285, scope: !274)
!375 = !DILocation(line: 288, scope: !274)
!376 = !DILocation(line: 303, scope: !274)
!377 = distinct !DISubprogram(name: "builder_to_string", linkageName: "io.builder_to_string", scope: !1, file: !1, line: 305, type: !378, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!378 = !DISubroutineType(types: !379)
!379 = !{!380, !82}
!380 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !381)
!381 = !{!85, !382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !93, size: 64, align: 64, offset: 64)
!383 = !DILocation(line: 305, scope: !377)
!384 = !DILocalVariable(name: "b_in", scope: !377, file: !1, line: 305, type: !82)
!385 = !DILocation(line: 306, scope: !377)
!386 = !DILocalVariable(name: "b", scope: !377, file: !1, line: 306, type: !82)
!387 = !DILocation(line: 307, scope: !377)
!388 = !DILocalVariable(name: "alloc", scope: !377, file: !1, line: 307, type: !389)
!389 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem.Allocator", scope: !1, file: !1, size: 192, elements: !390)
!390 = !{!391, !397, !401}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1, file: !1, baseType: !392, size: 64, align: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *mem.Allocator) -> ?*", baseType: !393, size: 64, align: 64, dwarfAddressSpace: 0)
!393 = !DISubroutineType(types: !394)
!394 = !{!280, !86, !395}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*mem.Allocator", baseType: !396, size: 64, align: 64, dwarfAddressSpace: 0)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem.Allocator", scope: !1, file: !1, size: 192, align: 64, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1, file: !1, baseType: !398, size: 64, align: 64, offset: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *mem.Allocator)", baseType: !399, size: 64, align: 64, dwarfAddressSpace: 0)
!399 = !DISubroutineType(types: !400)
!400 = !{null, !280, !395}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !280, size: 64, align: 64, offset: 128)
!402 = !DILocation(line: 308, scope: !377)
!403 = !DILocalVariable(name: "res", scope: !377, file: !1, line: 308, type: !380)
!404 = !DILocation(line: 310, scope: !377)
!405 = !DILocalVariable(name: "i", scope: !377, file: !1, line: 310, type: !86)
!406 = !DILocation(line: 311, scope: !377)
!407 = !DILocalVariable(name: "ptr", scope: !377, file: !1, line: 311, type: !93)
!408 = !DILocation(line: 312, scope: !377)
!409 = !DILocation(line: 313, scope: !377)
!410 = !DILocation(line: 314, scope: !377)
!411 = !DILocation(line: 317, scope: !377)
!412 = !DILocalVariable(name: "size", scope: !377, file: !1, line: 317, type: !86)
!413 = !DILocation(line: 318, scope: !377)
!414 = !DILocalVariable(name: "j", scope: !377, file: !1, line: 318, type: !86)
!415 = !DILocation(line: 319, scope: !377)
!416 = !DILocation(line: 323, scope: !377)
!417 = distinct !DISubprogram(name: "print_type_with_formatter", linkageName: "io.print_type_with_formatter", scope: !1, file: !1, line: 326, type: !418, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!418 = !DISubroutineType(types: !419)
!419 = !{null, !82, !89, !277}
!420 = !DILocation(line: 326, scope: !417)
!421 = !DILocalVariable(name: "b", scope: !417, file: !1, line: 326, type: !82)
!422 = !DILocalVariable(name: "c", arg: 1, scope: !417, file: !1, line: 326, type: !89)
!423 = !DILocalVariable(name: "arg", arg: 2, scope: !417, file: !1, line: 326, type: !277)
!424 = !DILocation(line: 327, scope: !417)
!425 = !DILocalVariable(name: "t", scope: !417, file: !1, line: 327, type: !173)
!426 = !DILocation(line: 328, scope: !417)
!427 = !DILocation(line: 329, scope: !417)
!428 = !DILocalVariable(name: "str", scope: !417, file: !1, line: 329, type: !93)
!429 = !DILocation(line: 330, scope: !417)
!430 = !DILocalVariable(name: "i", scope: !417, file: !1, line: 330, type: !86)
!431 = !DILocation(line: 331, scope: !417)
!432 = !DILocation(line: 333, scope: !417)
!433 = !DILocation(line: 335, scope: !417)
!434 = !DILocalVariable(name: "c", scope: !417, file: !1, line: 335, type: !89)
!435 = !DILocation(line: 336, scope: !417)
!436 = !DILocation(line: 337, scope: !417)
!437 = !DILocation(line: 338, scope: !417)
!438 = !DILocation(line: 339, scope: !417)
!439 = !DILocation(line: 341, scope: !417)
!440 = !DILocation(line: 343, scope: !417)
!441 = !DILocation(line: 344, scope: !417)
!442 = !DILocation(line: 345, scope: !417)
!443 = !DILocation(line: 347, scope: !417)
!444 = distinct !DISubprogram(name: "__internal_print", linkageName: "io.__internal_print", scope: !1, file: !1, line: 350, type: !445, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!445 = !DISubroutineType(types: !446)
!446 = !{!83, !90, !447}
!447 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !448)
!448 = !{!85, !449}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !450, size: 64, align: 64, offset: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*init.Arg", baseType: !277, size: 64, align: 64, dwarfAddressSpace: 0)
!451 = !DILocation(line: 350, scope: !444)
!452 = !DILocalVariable(name: "fmt", scope: !444, file: !1, line: 350, type: !90)
!453 = !DILocalVariable(name: "args", arg: 1, scope: !444, file: !1, line: 350, type: !447)
!454 = !DILocation(line: 351, scope: !444)
!455 = !DILocalVariable(name: "alloc", scope: !444, file: !1, line: 351, type: !389)
!456 = !DILocation(line: 352, scope: !444)
!457 = !DILocalVariable(name: "builder", scope: !444, file: !1, line: 352, type: !83)
!458 = !DILocation(line: 353, scope: !444)
!459 = !DILocalVariable(name: "arg_count", scope: !444, file: !1, line: 353, type: !86)
!460 = !DILocation(line: 354, scope: !444)
!461 = !DILocalVariable(name: "need_to_print_arg", scope: !444, file: !1, line: 354, type: !151)
!462 = !DILocation(line: 355, scope: !444)
!463 = !DILocalVariable(name: "c", scope: !444, file: !1, line: 355, type: !89)
!464 = !DILocalVariable(name: "i", scope: !444, file: !1, line: 355, type: !86)
!465 = !DILocation(line: 356, scope: !444)
!466 = !DILocation(line: 357, scope: !444)
!467 = !DILocation(line: 359, scope: !444)
!468 = !DILocation(line: 360, scope: !444)
!469 = !DILocalVariable(name: "arg", scope: !444, file: !1, line: 360, type: !277)
!470 = !DILocation(line: 361, scope: !444)
!471 = !DILocation(line: 362, scope: !444)
!472 = !DILocation(line: 363, scope: !444)
!473 = !DILocation(line: 365, scope: !444)
!474 = !DILocation(line: 370, scope: !444)
!475 = !DILocation(line: 371, scope: !444)
!476 = !DILocalVariable(name: "arg", scope: !444, file: !1, line: 371, type: !277)
!477 = !DILocation(line: 372, scope: !444)
!478 = !DILocation(line: 373, scope: !444)
!479 = !DILocation(line: 374, scope: !444)
!480 = !DILocation(line: 377, scope: !444)
!481 = distinct !DISubprogram(name: "vsprint", linkageName: "io.vsprint", scope: !1, file: !1, line: 381, type: !482, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!482 = !DISubroutineType(types: !483)
!483 = !{!90, !90, !447}
!484 = !DILocation(line: 381, scope: !481)
!485 = !DILocalVariable(name: "str", scope: !481, file: !1, line: 381, type: !90)
!486 = !DILocalVariable(name: "args", arg: 1, scope: !481, file: !1, line: 381, type: !447)
!487 = !DILocation(line: 382, scope: !481)
!488 = !DILocalVariable(name: "builder", scope: !481, file: !1, line: 382, type: !83)
!489 = !DILocation(line: 383, scope: !481)
!490 = !DILocalVariable(name: "res", scope: !481, file: !1, line: 383, type: !380)
!491 = !DILocation(line: 384, scope: !481)
!492 = !DILocation(line: 385, scope: !481)
!493 = distinct !DISubprogram(name: "sprint", linkageName: "io.sprint", scope: !1, file: !1, line: 388, type: !494, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!494 = !DISubroutineType(types: !495)
!495 = !{!90, !90}
!496 = !DILocation(line: 388, scope: !493)
!497 = !DILocalVariable(name: "str", scope: !493, file: !1, line: 388, type: !90)
!498 = !DILocalVariable(name: "args", arg: 1, scope: !493, file: !1, line: 388, type: !447)
!499 = !DILocation(line: 389, scope: !493)
!500 = !DILocalVariable(name: "builder", scope: !493, file: !1, line: 389, type: !83)
!501 = !DILocation(line: 390, scope: !493)
!502 = !DILocalVariable(name: "res", scope: !493, file: !1, line: 390, type: !380)
!503 = !DILocation(line: 391, scope: !493)
!504 = !DILocation(line: 392, scope: !493)
!505 = distinct !DISubprogram(name: "print", linkageName: "io.print", scope: !1, file: !1, line: 395, type: !506, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!506 = !DISubroutineType(types: !507)
!507 = !{null, !90}
!508 = !DILocation(line: 395, scope: !505)
!509 = !DILocalVariable(name: "str", scope: !505, file: !1, line: 395, type: !90)
!510 = !DILocalVariable(name: "args", arg: 1, scope: !505, file: !1, line: 395, type: !447)
!511 = !DILocation(line: 396, scope: !505)
!512 = !DILocalVariable(name: "builder", scope: !505, file: !1, line: 396, type: !83)
!513 = !DILocation(line: 397, scope: !505)
!514 = !DILocalVariable(name: "res", scope: !505, file: !1, line: 397, type: !380)
!515 = !DILocation(line: 398, scope: !505)
!516 = !DILocation(line: 399, scope: !505)
!517 = !DILocation(line: 400, scope: !505)
!518 = !DILocation(line: 401, scope: !505)
!519 = distinct !DISubprogram(name: "println", linkageName: "io.println", scope: !1, file: !1, line: 403, type: !506, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!520 = !DILocation(line: 403, scope: !519)
!521 = !DILocalVariable(name: "str", scope: !519, file: !1, line: 403, type: !90)
!522 = !DILocalVariable(name: "args", arg: 1, scope: !519, file: !1, line: 403, type: !447)
!523 = !DILocation(line: 404, scope: !519)
!524 = !DILocalVariable(name: "builder", scope: !519, file: !1, line: 404, type: !83)
!525 = !DILocation(line: 405, scope: !519)
!526 = !DILocation(line: 406, scope: !519)
!527 = !DILocalVariable(name: "res", scope: !519, file: !1, line: 406, type: !380)
!528 = !DILocation(line: 407, scope: !519)
!529 = !DILocation(line: 408, scope: !519)
!530 = !DILocation(line: 409, scope: !519)
!531 = !DILocation(line: 411, scope: !519)
!532 = distinct !DISubprogram(name: "readln", linkageName: "io.readln", scope: !1, file: !1, line: 413, type: !533, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!533 = !DISubroutineType(types: !534)
!534 = !{!90, !395, !89}
!535 = !DILocation(line: 413, scope: !532)
!536 = !DILocalVariable(name: "alloc", scope: !532, file: !1, line: 413, type: !395)
!537 = !DILocalVariable(name: "max", arg: 1, scope: !532, file: !1, line: 413, type: !89)
!538 = !DILocation(line: 414, scope: !532)
!539 = !DILocalVariable(name: "mem", scope: !532, file: !1, line: 414, type: !280)
!540 = !DILocation(line: 415, scope: !532)
!541 = !DILocation(line: 416, scope: !532)
!542 = !DILocation(line: 419, scope: !532)
!543 = !DILocalVariable(name: "buf", scope: !532, file: !1, line: 419, type: !93)
!544 = !DILocation(line: 420, scope: !532)
!545 = !DILocalVariable(name: "count", scope: !532, file: !1, line: 420, type: !89)
!546 = !DILocation(line: 421, scope: !532)
!547 = !DILocation(line: 422, scope: !532)
!548 = !DILocation(line: 425, scope: !532)
!549 = !DILocalVariable(name: "res", scope: !532, file: !1, line: 425, type: !90)
!550 = !DILocation(line: 426, scope: !532)
!551 = !DILocation(line: 427, scope: !532)
!552 = !DILocation(line: 429, scope: !532)
!553 = distinct !DISubprogram(name: "get_next", linkageName: "io.get_next", scope: !1, file: !1, line: 432, type: !554, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!554 = !DISubroutineType(types: !555)
!555 = !{!89, !93}
!556 = !DILocation(line: 432, scope: !553)
!557 = !DILocalVariable(name: "curr", scope: !553, file: !1, line: 432, type: !93)
!558 = !DILocation(line: 433, scope: !553)
!559 = !DILocalVariable(name: "scan", scope: !553, file: !1, line: 433, type: !93)
!560 = !DILocation(line: 434, scope: !553)
!561 = !DILocalVariable(name: "codepoint", scope: !553, file: !1, line: 434, type: !89)
!562 = !DILocation(line: 435, scope: !553)
!563 = !DILocation(line: 436, scope: !553)
!564 = !DILocation(line: 437, scope: !553)
!565 = !DILocation(line: 438, scope: !553)
!566 = !DILocation(line: 440, scope: !553)
!567 = !DILocation(line: 443, scope: !553)
!568 = distinct !DISubprogram(name: "format_float:(type,*[]u32,f32,i32)->void", linkageName: "io.format_float:(type,*[]u32,f32,i32)->void", scope: !1, file: !1, line: 67, type: !569, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!569 = !DISubroutineType(types: !570)
!570 = !{null, !198, !82, !340, !571}
!571 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!572 = !DILocation(line: 67, scope: !568)
!573 = !DILocalVariable(name: "ft", scope: !568, file: !1, line: 67, type: !198)
!574 = !DILocalVariable(name: "b", arg: 1, scope: !568, file: !1, line: 67, type: !82)
!575 = !DILocalVariable(name: "num_in", arg: 2, scope: !568, file: !1, line: 67, type: !340)
!576 = !DILocalVariable(name: "round_at", arg: 3, scope: !568, file: !1, line: 67, type: !571)
!577 = !DILocation(line: 68, scope: !568)
!578 = !DILocalVariable(name: "temp", scope: !568, file: !1, line: 68, type: !114)
!579 = !DILocation(line: 69, scope: !568)
!580 = !DILocalVariable(name: "count", scope: !568, file: !1, line: 69, type: !86)
!581 = !DILocation(line: 70, scope: !568)
!582 = !DILocalVariable(name: "num", scope: !568, file: !1, line: 70, type: !340)
!583 = !DILocation(line: 72, scope: !568)
!584 = !DILocation(line: 73, scope: !568)
!585 = !DILocation(line: 76, scope: !568)
!586 = !DILocation(line: 77, scope: !568)
!587 = !DILocation(line: 78, scope: !568)
!588 = !DILocation(line: 81, scope: !568)
!589 = !DILocalVariable(name: "is_neg", scope: !568, file: !1, line: 81, type: !151)
!590 = !DILocation(line: 82, scope: !568)
!591 = !DILocation(line: 83, scope: !568)
!592 = !DILocation(line: 84, scope: !568)
!593 = !DILocation(line: 87, scope: !568)
!594 = !DILocation(line: 88, scope: !568)
!595 = !DILocalVariable(name: "int_val", scope: !568, file: !1, line: 88, type: !571)
!596 = !DILocation(line: 89, scope: !568)
!597 = !DILocalVariable(name: "dec", scope: !568, file: !1, line: 89, type: !571)
!598 = !DILocation(line: 91, scope: !568)
!599 = !DILocation(line: 92, scope: !568)
!600 = !DILocation(line: 93, scope: !568)
!601 = !DILocation(line: 96, scope: !568)
!602 = !DILocation(line: 97, scope: !568)
!603 = !DILocation(line: 98, scope: !568)
!604 = !DILocation(line: 99, scope: !568)
!605 = !DILocation(line: 103, scope: !568)
!606 = !DILocation(line: 104, scope: !568)
!607 = !DILocation(line: 106, scope: !568)
!608 = !DILocation(line: 107, scope: !568)
!609 = !DILocation(line: 108, scope: !568)
!610 = !DILocation(line: 110, scope: !568)
!611 = !DILocation(line: 111, scope: !568)
!612 = !DILocation(line: 112, scope: !568)
!613 = !DILocation(line: 113, scope: !568)
!614 = !DILocation(line: 118, scope: !568)
!615 = !DILocation(line: 119, scope: !568)
!616 = !DILocation(line: 122, scope: !568)
!617 = !DILocalVariable(name: "i", scope: !568, file: !1, line: 122, type: !86)
!618 = !DILocation(line: 123, scope: !568)
!619 = !DILocation(line: 125, scope: !568)
!620 = distinct !DISubprogram(name: "format_float:(type,*[]u32,f64,i32)->void", linkageName: "io.format_float:(type,*[]u32,f64,i32)->void", scope: !1, file: !1, line: 67, type: !621, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!621 = !DISubroutineType(types: !622)
!622 = !{null, !198, !82, !345, !571}
!623 = !DILocation(line: 67, scope: !620)
!624 = !DILocalVariable(name: "ft", scope: !620, file: !1, line: 67, type: !198)
!625 = !DILocalVariable(name: "b", arg: 1, scope: !620, file: !1, line: 67, type: !82)
!626 = !DILocalVariable(name: "num_in", arg: 2, scope: !620, file: !1, line: 67, type: !345)
!627 = !DILocalVariable(name: "round_at", arg: 3, scope: !620, file: !1, line: 67, type: !571)
!628 = !DILocation(line: 68, scope: !620)
!629 = !DILocalVariable(name: "temp", scope: !620, file: !1, line: 68, type: !114)
!630 = !DILocation(line: 69, scope: !620)
!631 = !DILocalVariable(name: "count", scope: !620, file: !1, line: 69, type: !86)
!632 = !DILocation(line: 70, scope: !620)
!633 = !DILocalVariable(name: "num", scope: !620, file: !1, line: 70, type: !345)
!634 = !DILocation(line: 72, scope: !620)
!635 = !DILocation(line: 73, scope: !620)
!636 = !DILocation(line: 76, scope: !620)
!637 = !DILocation(line: 77, scope: !620)
!638 = !DILocation(line: 78, scope: !620)
!639 = !DILocation(line: 81, scope: !620)
!640 = !DILocalVariable(name: "is_neg", scope: !620, file: !1, line: 81, type: !151)
!641 = !DILocation(line: 82, scope: !620)
!642 = !DILocation(line: 83, scope: !620)
!643 = !DILocation(line: 84, scope: !620)
!644 = !DILocation(line: 87, scope: !620)
!645 = !DILocation(line: 88, scope: !620)
!646 = !DILocalVariable(name: "int_val", scope: !620, file: !1, line: 88, type: !571)
!647 = !DILocation(line: 89, scope: !620)
!648 = !DILocalVariable(name: "dec", scope: !620, file: !1, line: 89, type: !571)
!649 = !DILocation(line: 91, scope: !620)
!650 = !DILocation(line: 92, scope: !620)
!651 = !DILocation(line: 93, scope: !620)
!652 = !DILocation(line: 96, scope: !620)
!653 = !DILocation(line: 97, scope: !620)
!654 = !DILocation(line: 98, scope: !620)
!655 = !DILocation(line: 99, scope: !620)
!656 = !DILocation(line: 103, scope: !620)
!657 = !DILocation(line: 104, scope: !620)
!658 = !DILocation(line: 106, scope: !620)
!659 = !DILocation(line: 107, scope: !620)
!660 = !DILocation(line: 108, scope: !620)
!661 = !DILocation(line: 110, scope: !620)
!662 = !DILocation(line: 111, scope: !620)
!663 = !DILocation(line: 112, scope: !620)
!664 = !DILocation(line: 113, scope: !620)
!665 = !DILocation(line: 118, scope: !620)
!666 = !DILocation(line: 119, scope: !620)
!667 = !DILocation(line: 122, scope: !620)
!668 = !DILocalVariable(name: "i", scope: !620, file: !1, line: 122, type: !86)
!669 = !DILocation(line: 123, scope: !620)
!670 = !DILocation(line: 125, scope: !620)
